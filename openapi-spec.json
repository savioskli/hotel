{
  "openapi": "3.0.1",
  "info": {
    "title": "Interhome Group Distribution API",
    "description": "The Webservices have been developed for Interhome Group using a REST-approach.\r\n\r\n## Endpoint-URLs Format\r\n[Base URL][REST route][Selectors][Query parameters]\r\n\r\n## Service URLs\r\nTest System: https://ws.interhome.com/test/ih/b2b/V0100/\r\n\r\nProduction system: https://ws.interhome.com/ih/b2b/V0100/\r\n\r\nRoutes, selectors and query parameters are specified below with each individual service.\r\n## Limitation of requests\r\nTest Environment: 50 RQ /second\r\n\r\nProductive Environment: 200 RQ/second\r\n\r\nPlease use \"Accept-Encoding: gzip\" to reduce traffic.\r\n\r\n## Scheduled downtime\r\nEvery Tuesday morning around 4:00 to 6:00 (CET), our service might be unresponsive due to system updates.",
    "termsOfService": "https://partners.interhome.group/",
    "contact": {
      "name": "Interhome Group",
      "url": "https://partners.interhome.group/",
      "email": "partners@interhome.group"
    },
    "version": "v5.2.2"
  },
  "servers": [
    {
      "url": "https://ws.interhome.com/test/ih/b2b/V0100"
    }
  ],
  "paths": {
    "/accommodation/list": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.1.1 Accommodation list",
        "description": "## Description\r\nThe method returns a list of all accommodations (code, name, date of modification) with an active contract.\r\n## Use case\r\nThis method is typically called during a nightly or weekly automated update of property data. The returned static data for the accommodation codes is afterwards updated using the *Accommodation/Details* service and is cached locally.\r\n            \r\nPlease be aware that you should use the query parameter *ModifiedSince* to receive just the accommodation which have been updated in the following fields since your last import: *Prices*, *Accommodation/Details*. Interhome does not support any info of inactivated properties; so you need to create your own delta.\r\n## Caching\r\nYes\r\n## Timing/Duration of call\r\nWhole portfolio: 1 second\r\n            \r\nWith *ModifiedSince*: 3 seconds\r\n## Examples\r\n[https://ws.interhome.com/ih/b2b/V0100/accommodation/list](https://ws.interhome.com/ih/b2b/V0100/accommodation/list)",
        "operationId": "ListAccommodations",
        "parameters": [
          {
            "name": "ModifiedSince",
            "in": "query",
            "description": "Filters results to accommodations modified after a given\r\ndate. ModifiedSince can be a date or a datetime value.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2016-06-24T10:00:00"
          },
          {
            "name": "Brand",
            "in": "query",
            "description": "One or many specific brands",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ModifyType",
            "in": "query",
            "description": "List of ModifyTypes to specifically search for. For example you want to check every 5 minutes for changes on availability then use 'VACANCY' (see LastModifiedTypeEnum)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LastModifiedTypeEnum"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationListRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationListRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/accommodation/list/{countryCode}": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.1.2 Accommodation list",
        "description": "## Description\r\nThe method returns a list of all accommodations (code, name, date of modification) with an active contract for the selected country.\r\n## Use case\r\nThis method is typically called during a nightly or weekly automated update of property data. The returned static data for the accommodation codes is afterwards updated using the *Accommodation/Details* service and is cached locally.\r\n            \r\nPlease be aware that you should use the query parameter *ModifiedSince* to receive just the accommodation which have been updated in the following fields since your last import: *Prices*, *Accommodation/Details*. Interhome does not support any info of inactivated properties; so you need to create your own delta.\r\n## Caching\r\nYes\r\n## Timing/Duration of call\r\nWhole portfolio: 1 second\r\n            \r\nWith *ModifiedSince*: 3 seconds\r\n## Examples\r\n[https://ws.interhome.com/ih/b2b/V0100/accommodation/list](https://ws.interhome.com/ih/b2b/V0100/accommodation/list)",
        "operationId": "ListAccommodationsByCountryCode",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "All accommodations in this country",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH"
          },
          {
            "name": "ModifiedSince",
            "in": "query",
            "description": "Filters results to accommodations modified after a given\r\ndateModifiedSince can be a date or a datetime value.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2016-06-24T10:00:00"
          },
          {
            "name": "Brand",
            "in": "query",
            "description": "One or many specific brands",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ModifyType",
            "in": "query",
            "description": "List of ModifyTypes to specifically search for. For example you want to check every 5 minutes for changes on availability then use 'VACANCY' (see LastModifiedTypeEnum)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LastModifiedTypeEnum"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationListRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationListRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/accommodation/list/{countryCode}/{placeCode}": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.1.3 Accommodation list",
        "description": "## Description\r\nThe method returns a list of all accommodations (code, name, date of modification) with an active contract for the selected country and place.\r\n## Use case\r\nThis method is typically called during a nightly or weekly automated update of property data. The returned static data for the accommodation codes is afterwards updated using the *Accommodation/Details* service and is cached locally.\r\n            \r\nPlease be aware that you should use the query parameter *ModifiedSince* to receive just the accommodation which have been updated in the following fields since your last import: *Prices*, *Accommodation/Details*. Interhome does not support any info of inactivated properties; so you need to create your own delta.\r\n## Caching\r\nYes\r\n## Timing/Duration of call\r\nWhole portfolio: 1 second\r\n            \r\nWith *ModifiedSince*: 3 seconds\r\n## Examples\r\n[https://ws.interhome.com/ih/b2b/V0100/accommodation/list](https://ws.interhome.com/ih/b2b/V0100/accommodation/list)",
        "operationId": "ListAccommodationsByCountryCodePlaceCode",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "All accommodations in this country",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH"
          },
          {
            "name": "placeCode",
            "in": "path",
            "description": "All accommodations in this country and place",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 3920
          },
          {
            "name": "ModifiedSince",
            "in": "query",
            "description": "Filters results to accommodations modified after a given\r\ndateModifiedSince can be a date or a datetime value.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2016-06-24T10:00:00"
          },
          {
            "name": "Brand",
            "in": "query",
            "description": "One or many specific brands",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ModifyType",
            "in": "query",
            "description": "List of ModifyTypes to specifically search for. For example you want to check every 5 minutes for changes on availability then use 'VACANCY' (see LastModifiedTypeEnum)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LastModifiedTypeEnum"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationListRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationListRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/accommodation/list/{countryCode}/{placeCode}/{houseCode}": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.1.4 Accommodation list",
        "description": "## Description\r\nThe method returns a list of all accommodations (code, name, date of modification) with an active contract for the selected region.\r\n## Use case\r\nThis method is typically called during a nightly or weekly automated update of property data. The returned static data for the accommodation codes is afterwards updated using the *Accommodation/Details* service and is cached locally.\r\n            \r\nPlease be aware that you should use the query parameter *ModifiedSince* to receive just the accommodation which have been updated in the following fields since your last import: *Prices*, *Accommodation/Details*. Interhome does not support any info of inactivated properties; so you need to create your own delta.\r\n## Caching\r\nYes\r\n## Timing/Duration of call\r\nWhole portfolio: 1 second\r\n            \r\nWith *ModifiedSince*: 3 seconds\r\n## Examples\r\n[https://ws.interhome.com/ih/b2b/V0100/accommodation/list](https://ws.interhome.com/ih/b2b/V0100/accommodation/list)",
        "operationId": "ListAccommodationsByCountryCodePlaceCodeRegionCode",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "All accommodations in this country",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH"
          },
          {
            "name": "placeCode",
            "in": "path",
            "description": "All accommodations in this country and place",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 3920
          },
          {
            "name": "houseCode",
            "in": "path",
            "description": "All accommodations in this region",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "ModifiedSince",
            "in": "query",
            "description": "Filters results to accommodations modified after a given\r\ndateModifiedSince can be a date or a datetime value.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2016-06-24T10:00:00"
          },
          {
            "name": "Brand",
            "in": "query",
            "description": "One or many specific brands",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ModifyType",
            "in": "query",
            "description": "List of ModifyTypes to specifically search for. For example you want to check every 5 minutes for changes on availability then use 'VACANCY' (see LastModifiedTypeEnum)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LastModifiedTypeEnum"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationListRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationListRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/accommodation/list/{countryCode}/{placeCode}/{houseCode}/{accommodationCode}": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.1.5 Accommodation list",
        "description": "## Description\r\nThe method returns a list of all accommodations (code, name, date of modification) with an active contract for the selected house.\r\n## Use case\r\nThis method is typically called during a nightly or weekly automated update of property data. The returned static data for the accommodation codes is afterwards updated using the *Accommodation/Details* service and is cached locally.\r\n            \r\nPlease be aware that you should use the query parameter *ModifiedSince* to receive just the accommodation which have been updated in the following fields since your last import: *Prices*, *Accommodation/Details*. Interhome does not support any info of inactivated properties; so you need to create your own delta.\r\n## Caching\r\nYes\r\n## Timing/Duration of call\r\nWhole portfolio: 1 second\r\n            \r\nWith *ModifiedSince*: 3 seconds\r\n## Examples\r\n[https://ws.interhome.com/ih/b2b/V0100/accommodation/list](https://ws.interhome.com/ih/b2b/V0100/accommodation/list)",
        "operationId": "ListAccommodationsByCountryCodePlaceCodeRegionCodeHouseCode",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "All accommodations in this country",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH"
          },
          {
            "name": "placeCode",
            "in": "path",
            "description": "All accommodations in this country and place",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 3920
          },
          {
            "name": "houseCode",
            "in": "path",
            "description": "All accommodations in this house",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 4
          },
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "Specific accommodation in the given house",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ModifiedSince",
            "in": "query",
            "description": "Filters results to accommodations modified after a given\r\ndateModifiedSince can be a date or a datetime value.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2016-06-24T10:00:00"
          },
          {
            "name": "Brand",
            "in": "query",
            "description": "One or many specific brands",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ModifyType",
            "in": "query",
            "description": "List of ModifyTypes to specifically search for. For example you want to check every 5 minutes for changes on availability then use 'VACANCY' (see LastModifiedTypeEnum)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LastModifiedTypeEnum"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationListRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationListRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/accommodation/{accommodationCode}": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.2.1 Accommodation detail",
        "description": "## Description\r\nThe Accommodation Detail method returns all static data (descriptions, attributes, media URLs) of an accommodation.\r\nMultiple languages can be retrieved at once by adding \"Language\" parameters to the URL\r\n## Use case\r\nThis method is typically used on the property details page.\r\n## Caching\r\nThe response of this method must be cached and updated at least weekly.",
        "operationId": "GetAccommodationDetailsByAccommodationCode",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH3920.4.1"
          },
          {
            "name": "Language",
            "in": "query",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            }
          },
          {
            "name": "CheckIn",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2016-06-24"
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationDetailsRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationDetailsRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/accommodation/media/{accommodationCode}": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.3.1 Accommodation media",
        "description": "## Description\r\nThis method is a subset of the Accommodation Detail response. It returns all media URLs. Currently, only photos are supported and returned.\r\n## Use case\r\nIt is typically used to access/update accommodation media URLs only during a nightly update.\r\n## Caching\r\nThe response of this method must be cached and updated, at least weekly.",
        "operationId": "ListAccommodationMediaByAccommodationCodeWithPageAndModifiedSince",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH3920.4.1"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Amount of results per page (required, if Page, ModifiedSinceFrom or ModifiedSinceTo is set)",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page selection (required, if PageSize, ModifiedSinceFrom or ModifiedSinceTo is set)",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "ModifiedSinceFrom",
            "in": "query",
            "description": "Start date for modified since filtering (required, if ModifiedSinceTo is set)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2022-01-01"
          },
          {
            "name": "ModifiedSinceTo",
            "in": "query",
            "description": "End date for modified since filtering (required, if ModifiedSinceFrom is set)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2022-02-01"
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation Media",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationMediaRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationMediaRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/accommodation/media/{accommodationCode}/{resolution}": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.3.2 Accommodation media",
        "description": "## Description\r\nThis method is a subset of the Accommodation Detail response. It returns all media URLs. Currently, only photos are supported and returned.\r\n## Use case\r\nIt is typically used to access/update accommodation media URLs only during a nightly update.\r\n## Caching\r\nThe response of this method must be cached and updated, at least weekly.",
        "operationId": "ListAccommodationMediaByAccommodationCodeResolutionWithPageAndModifiedSince",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH3920.4.1"
          },
          {
            "name": "resolution",
            "in": "path",
            "description": "Default is medium, see PhotoResolutionEnum",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PhotoResolutionEnum"
                }
              ],
              "description": "Photo resolution enumeration"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Amount of results per page (required, if Page, ModifiedSinceFrom or ModifiedSinceTo is set)",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page selection (required, if PageSize, ModifiedSinceFrom or ModifiedSinceTo is set)",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "ModifiedSinceFrom",
            "in": "query",
            "description": "Start date for modified since filtering (required, if ModifiedSinceTo is set)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2022-01-01"
          },
          {
            "name": "ModifiedSinceTo",
            "in": "query",
            "description": "End date for modified since filtering (required, if ModifiedSinceFrom is set)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2022-02-01"
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation Media",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationMediaRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationMediaRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/accommodation/services/{accommodationCode}/{language}": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.4.1 Accommodation services",
        "description": "## Description\r\nReturns all services and extra costs (both mandatory and optional) for a specific property of the chosen sales currency in the selected language.\r\n            \r\n            \r\n**Services that have to be paid on the spot are always returned in the destination currency, no matter which sales\r\ncurrency is chosen!**\r\n## Caching\r\nYes\r\n## Use case\r\nThe services returned are typically cached in a local database.\r\n## Timing/Duration of call\r\nRequest with a specific travel date: 150ms. Request for all travel dates: 550ms.",
        "operationId": "ListAccommodationServicesByAccommodationCodeLanguage",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LanguagesEnum"
                }
              ],
              "description": ""
            },
            "example": "En"
          },
          {
            "name": "SalesOffice",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Currency",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CurrencyEnum"
                }
              ],
              "description": "Special themes"
            }
          },
          {
            "name": "CheckIn",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CheckOut",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation Services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationSvcRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationSvcRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/accommodation/pricelist/{accommodationCode}": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.5. Accommodation Price list",
        "description": "## Description\r\nReturns all prices for a given duration / occupancy.  For different source markets, this request does not have to be sent per SalesOffice.\r\n            \r\nIn that case, only the EUR prices can be imported and prices for other source markets can be calculated with the currency.xml provided on our partner ftp. This does not include source markets for India and Australia.\r\n## Use case\r\n- To display the cheapest price for a given duration\r\n- To create a price matrix\r\n- Some partners use it to provide a calendar including prices to the guests\r\n- To import prices weekly\r\n## Caching\r\nIt is **not allowed** to use this request to update the prices several times a day. The response of this method has to be cached and should be updated at least weekly.",
        "operationId": "ListAccommodationPricesByAccommodationCode",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "Selects the corresponding accommodation",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH3920.4.1"
          },
          {
            "name": "SalesOffice",
            "in": "query",
            "description": "Includes services of this Sales Office",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2020
          },
          {
            "name": "Currency",
            "in": "query",
            "description": "Currency in which all amounts should be returned",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CurrencyEnum"
                }
              ],
              "description": "Special themes"
            },
            "example": "CHF"
          },
          {
            "name": "Duration",
            "in": "query",
            "description": "Duration of stay (in days)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 7
          },
          {
            "name": "PaxSplit",
            "in": "query",
            "description": "If there are different prices depending on occupancy, all will be delivered with this parameter set to true. With value false or without this parameter you only get prices for maximum occupancy.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation Price List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationPriceRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationPriceRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/accommodation/pricelistalldur/{accommodationCode}": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.6.1 Accommodation Price List with pax split and all durations",
        "description": "## Description\r\nReturns all prices for a given period for all durations from 1 to 28 nights. For different source markets, this request has to be sent per SalesOffice.\r\n## Use case\r\n- To fetch all prices for a specific accommodation\r\n- To import prices per check-in day, duration and pax (occupancy).\r\n## Caching\r\nThe response of this method has to be cached and should be updated once a day.",
        "operationId": "ListAccommodationPricesAllDurationsByAccommodationCode",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "DE3538.100.1"
          },
          {
            "name": "SalesOffice",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "LOS",
            "in": "query",
            "description": "Returns vacancy checked prices only. Only instant bookable options will be returned.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "Pax",
            "in": "query",
            "description": "Limit results to minimum pax",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 4
          },
          {
            "name": "Duration",
            "in": "query",
            "description": "Limits result to duration",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 7
          },
          {
            "name": "SpecialOffer",
            "in": "query",
            "description": "Adds information about special offers (default false)",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "RangeFromDate",
            "in": "query",
            "description": "Limits results to this earliest date",
            "schema": {
              "type": "string"
            },
            "example": "2021-02-24"
          },
          {
            "name": "RangeToDate",
            "in": "query",
            "description": "Limits results to this latest date",
            "schema": {
              "type": "string"
            },
            "example": "2021-05-24"
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation Price List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationPriceAllDurRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationPriceAllDurRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/accommodation/seasonpricelist/{accommodationCode}": {
      "get": {
        "tags": [
          "2. Accommodation"
        ],
        "summary": "2.7 Accommodation season price list",
        "description": "## Description\r\nReturns a seasonal price list as it would be printed in a catalog for a given duration (e.g. 1 week). For overlapping seasons, no price is returned.\r\n            \r\nIn comparison to accommodation/pricelist method (2.5), this method returns one price per season/contract built in our backend system. This method takes the price of the first day in this season and returns this.\r\n            \r\nIn general, during one season, the prices are the same, except when a special offer appears. In that case, those special offers during this contract/season will not be shown.\r\n## Use case\r\nIt is typically used to display a price list on the property details page. It is not recommended to use this method to import the data in your own database.\r\n## Caching\r\nThe response of this method must be cached and updated at least weekly.",
        "operationId": "ListAccommodationSeasonalPricesByAccommodationCode",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "Selects the corresponding accommodation",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH3920.4.1"
          },
          {
            "name": "SalesOffice",
            "in": "query",
            "description": "Includes services of this Sales Office",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2020
          },
          {
            "name": "Currency",
            "in": "query",
            "description": "Currency in which all amounts should be returned",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CurrencyEnum"
                }
              ],
              "description": "Special themes"
            },
            "example": "CHF"
          },
          {
            "name": "Duration",
            "in": "query",
            "description": "Duration of stay (in days)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 7
          },
          {
            "name": "PaxSplit",
            "in": "query",
            "description": "If there are different prices depending on occupancy, all will be delivered with this parameter set to true. With value false or without this parameter you only get prices for maximum occupancy.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Accommodation Seasonal Price List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationPriceRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationPriceRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/destinations/countries": {
      "get": {
        "tags": [
          "3. Destinations"
        ],
        "summary": "3.1 Destinations",
        "description": "## Description\r\nReturns all active travel destinations (countries, regions, places) in which Interhome Group offers accommodations.\r\n## Use case\r\nThe destination information should be cached in a local database. It then can be used to feed data (region, place codes etc.) to the Search method.\r\n## Caching\r\nThe response of this method must be cached and updated at least weekly.",
        "operationId": "ListAllTravelDestinationCountries",
        "parameters": [
          {
            "name": "Language",
            "in": "query",
            "description": "Specify a language or get default English",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LanguagesEnum"
                }
              ],
              "description": ""
            },
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "description": "Destination countries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelDestinationsRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TravelDestinationsRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/destinations/countries/{countryCode}": {
      "get": {
        "tags": [
          "3. Destinations"
        ],
        "summary": "3.2 Destinations",
        "description": "## Description\r\nReturns all active travel destinations (countries, regions, places) in which Interhome Group offers accommodations.\r\n## Use case\r\nThe destination information should be cached in a local database. It then can be used to feed data (region, place codes etc.) to the Search method.\r\n## Caching\r\nThe response of this method must be cached and updated at least weekly.",
        "operationId": "ListTravelDestinationCountriesByCountryCode",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country, regions and places -> means all travel destinations for chosen country",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH"
          },
          {
            "name": "Language",
            "in": "query",
            "description": "Specify a language or get default English",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LanguagesEnum"
                }
              ],
              "description": ""
            },
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "description": "Destination countries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelDestinationsRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TravelDestinationsRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/destinations/countries/{countryCode}/regions/{regionCode}": {
      "get": {
        "tags": [
          "3. Destinations"
        ],
        "summary": "3.3 Destinations",
        "description": "## Description\r\nReturns all active travel destinations (countries, regions, places) in which Interhome Group offers accommodations.\r\n## Use case\r\nThe destination information should be cached in a local database. It then can be used to feed data (region, place codes etc.) to the Search method.\r\n## Caching\r\nThe response of this method must be cached and updated at least weekly.",
        "operationId": "ListTravelDestinationsByCountryCodeRegionCode",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country, regions and places -> means all travel destinations for chosen country",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH"
          },
          {
            "name": "regionCode",
            "in": "path",
            "description": "All regions for chosen country",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "Language",
            "in": "query",
            "description": "Specify a language or get default English",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LanguagesEnum"
                }
              ],
              "description": ""
            },
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "description": "Destination countries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelDestinationsRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TravelDestinationsRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/destinations/countries/{countryCode}/places/{placeCode}": {
      "get": {
        "tags": [
          "3. Destinations"
        ],
        "summary": "3.4 Destinations",
        "description": "## Description\r\nReturns all active travel destinations (countries, regions, places) in which Interhome Group offers accommodations.\r\n## Use case\r\nThe destination information should be cached in a local database. It then can be used to feed data (region, place codes etc.) to the Search method.\r\n## Caching\r\nThe response of this method must be cached and updated at least weekly.",
        "operationId": "ListTravelDestinationByCountryCodePlaceCode",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country, regions and places -> means all travel destinations for chosen country",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH"
          },
          {
            "name": "placeCode",
            "in": "path",
            "description": "All places for chosen country",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "Language",
            "in": "query",
            "description": "Specify a language or get default English",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LanguagesEnum"
                }
              ],
              "description": ""
            },
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "description": "Destination countries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelDestinationsRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TravelDestinationsRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/salesoffices": {
      "get": {
        "tags": [
          "4. Sales Offices"
        ],
        "summary": "4.1 Sales offices",
        "description": "## Description\r\nReturns all Interhome Group sales offices which accept bookings, including accepted payment methods and cancellation conditions, via API.\r\n## Caching\r\nThe response of this method must be cached and updated at least weekly.",
        "operationId": "ListSalesOfficesInformation",
        "responses": {
          "200": {
            "description": "Sales offices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOfficesRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOfficesRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/salesoffices/{salesOffice}": {
      "get": {
        "tags": [
          "4. Sales Offices"
        ],
        "summary": "4.2 Sales offices",
        "description": "## Description\r\nReturns accepted payment methods and cancellation conditions for the selected sales office, via API.\r\n## Caching\r\nThe response of this method must be cached and updated at least weekly.",
        "operationId": "ListSalesOfficesInformationBySalesOffice",
        "parameters": [
          {
            "name": "salesOffice",
            "in": "path",
            "description": "Select a specific SalesOffice",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2020"
          }
        ],
        "responses": {
          "200": {
            "description": "Sales offices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOfficesRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOfficesRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/specialoffers/{specialOfferCode}/definitions": {
      "get": {
        "tags": [
          "5. Special Offers"
        ],
        "summary": "5.1 Special offer definitions",
        "description": "## Description\r\nThis method returns the definitions (descriptions) of all available special offers. It does not return any actual prices / special offers on product base.\r\n## Use case\r\nCan be used to cache an overview of all available special offer Interhome Group provides.\r\n## Timing/Duration of call\r\n100ms",
        "operationId": "GetSpecialOfferDefinitionBySpecialOfferCode",
        "parameters": [
          {
            "name": "specialOfferCode",
            "in": "path",
            "description": "Selects a specific special offer to see the conditions of booking for that offer, you need to replace the slash in the original special offer code with '%2F'",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "EB%F200000001"
          },
          {
            "name": "Language",
            "in": "query",
            "description": "Language of text elements. Default is English",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Special offer definitions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialOfferDefinitionsRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialOfferDefinitionsRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/specialoffers/definitions": {
      "get": {
        "tags": [
          "5. Special Offers"
        ],
        "summary": "5.1 Special offer definitions",
        "description": "## Description\r\nThis method returns the definitions (descriptions) of all available special offers. It does not return any actual prices / special offers on product base.\r\n## Use case\r\nCan be used to cache an overview of all available special offer Interhome Group provides.\r\n## Timing/Duration of call\r\n100ms",
        "operationId": "ListAllSpecialOfferDefinitions",
        "parameters": [
          {
            "name": "Language",
            "in": "query",
            "description": "Language of text elements. Default is English",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Special offer definitions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialOfferDefinitionsRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialOfferDefinitionsRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/booking/checkPossible": {
      "get": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.1 Booking check",
        "description": "## Description\r\nCheck if a booking is generally possible for a given check-in/check-out combination.\r\n## Use case\r\nThis method is only useful to check if a booking is generally possible. In many cases, the Check Price function (which yields the price) should be used instead.\r\nIf you just want to know if it is possible to create a reservation on this property, you receive Yes or No back and you can go forward with checkprice.\r\n## Caching\r\nNo",
        "operationId": "GetBookingCheckPossible",
        "parameters": [
          {
            "name": "AccommodationCode",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH3920.4.1"
          },
          {
            "name": "CheckIn",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2020-12-31"
          },
          {
            "name": "CheckOut",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2021-01-14"
          },
          {
            "name": "SalesOffice",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2020
          }
        ],
        "responses": {
          "204": {
            "description": "Booking possible"
          },
          "200": {
            "description": "Booking possible on request"
          },
          "404": {
            "description": "Booking not possible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPossibleRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPossibleRs"
                }
              }
            }
          },
          "410": {
            "description": "Booking not possible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPossibleRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPossibleRs"
                }
              }
            }
          }
        }
      }
    },
    "/booking/checkPrice": {
      "post": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.2 Check price",
        "description": "## Description\r\nChecks if a booking is possible and returns the final price along with all extra costs for a given check-in/check-out combination. Please be aware that CheckPriceRQ are only successful if the property has free vacancies available. If the property has no free vacancies (which you could check with vacancy/string), a 404 error is returned.\r\nAll Post Parameters have to be implemented in element BookingHeader.\r\nHandling of extra costs and services:\r\n* The final price returned in the response, includes all compulsory extra costs for the total duration of the stay\r\n* The cost for any optional service, which have to be paid with the reservation and is selected in the request, is included in the customer total price.\r\nMoreover the returned price for the optional service in the \"services\" section of the response is pre-calculated and refers to the total duration of the stay (no correlation to the unit in the response)\r\n* Optional services paid on spot are not included in customer total price. Those services have to be calculated for the customer (see example in 2.4 Accommodation Services)\r\n* If an optional service has been selected n times, it will appear n times in the response\r\n* Only services with type N* (additional services) can be selected at time of booking\r\n## Use case\r\nThis method is typically used on the property details page when a customer selects check-in and duration.\r\n## Caching\r\nNo",
        "operationId": "GetCheckPrice",
        "requestBody": {
          "description": "Body for price check",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CheckPriceRq"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "CheckPriceRq"
                }
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CheckPriceRq"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "CheckPriceRq"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Booking possible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPriceRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPriceRs"
                }
              }
            }
          },
          "404": {
            "description": "Price could not be determined (property does not exist or has no price information)"
          },
          "410": {
            "description": "Accommodation / trip not available"
          }
        }
      }
    },
    "/booking/checkPrice/final": {
      "post": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.3 Check price final",
        "description": "## Description\r\nFor this method, the format of both request and response is identical to booking/checkPrice. Additionally, to checkprice RQ, a live price is requested directly from the supplier for all third party properties.\r\n## Use case\r\nThis method must only be used to check the price in the final stage before the booking. It is not allowed to use this method to retrieve prices in bulk!\r\n## Timing/Duration of call\r\nIt can take up to 60 seconds before a response is generated.",
        "operationId": "GetCheckPriceFinal",
        "requestBody": {
          "description": "Body for price check",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CheckPriceRq"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "CheckPriceRq"
                }
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CheckPriceRq"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "CheckPriceRq"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Booking possible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPriceRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPriceRs"
                }
              }
            }
          },
          "404": {
            "description": "Price could not be determined (property does not exist or has no price information)"
          },
          "410": {
            "description": "Accommodation / trip not available"
          }
        }
      }
    },
    "/booking/cancelConditions/{salesOffice}": {
      "get": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.4 Cancel conditions",
        "description": "## Description\r\nReturns the cancellation conditions for a specific sales office.\r\n## Use case\r\nThis method is typically used during the booking process to display the cancellation conditions to the customer before the booking.\r\n## Caching\r\nThe response of this method must be cached and updated at least weekly.",
        "operationId": "ListCancelConditionsBySalesOffice",
        "parameters": [
          {
            "name": "salesOffice",
            "in": "path",
            "description": "Selects the corresponding SalesOffice",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2048
          }
        ],
        "responses": {
          "200": {
            "description": "Check Result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelConditionsRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CancelConditionsRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/booking/reservation": {
      "post": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.5.1 Create reservation",
        "description": "## Description\r\nSend a valid Reservation POST request. The service will respond with either the new Reservation Number in case of success or error messages in case of failure.\r\n## Use Case\r\nUse this request to create a final booking.\r\n## Timing/Duration of call\r\nThe reservation process can take up to 60 seconds. Therefore, it is advised to set the timeout to 60 seconds or more.",
        "operationId": "CreateReservation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateReservationRq"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "CreateReservationRq"
                }
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateReservationRq"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "CreateReservationRq"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created reservation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReservationRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReservationRs"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      }
    },
    "/booking/reservation/{reservationNumber}": {
      "get": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.5.2 Read reservation",
        "description": "## Description\r\nSend a GET request with the reservation number to be read as selector.\r\n## Use Case\r\nWith this request you get all the booking information including status of the booking.\r\n## Timing/Duration of call\r\nThe process can take up to 60 seconds. Therefore, it is advised to set the timeout to 60 seconds or more.",
        "operationId": "GetReservationByReservationNumber",
        "parameters": [
          {
            "name": "reservationNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read reservation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadReservationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ReadReservationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Request yields no result"
          }
        }
      },
      "delete": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.5.3 Cancel reservation",
        "description": "## Description\r\n* to cancel a reservation\r\n* In case of success, HTTP status code 204 is returned\r\n* If the reservation is already canceled, HTTP status code 410 (Gone) is returned\r\n## Timing/Duration of call\r\nThe process can take up to 60 seconds. Therefore, it is advised to set the timeout to 60 seconds or more.",
        "operationId": "DeleteReservationByReservationNumber",
        "parameters": [
          {
            "name": "reservationNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Canceled reservation"
          },
          "410": {
            "description": "Reservation was cancelled already"
          }
        }
      }
    },
    "/payform.html": {
      "get": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.5.4 Payment iFrame",
        "description": "## COLLECTING PAYMENTS\r\n## *THIS IS NOT AN API ENDPOINT*\r\n## This is an example for our iFrame payment website to which you can forward your customers for payments directly to Interhome Group.\r\n##\r\nAn overview of the allowed payments methods as well their deadlines per sales office can be found in our partner Wiki (http://www.interhome-partners.com/wiki/faq:general:salesoffices_overview) or by the following requests:\r\n- General overview: [https://ws.interhome.com/ih/b2b/V0100/salesoffices](https://ws.interhome.com/ih/b2b/V0100/salesoffices)\r\n- Specific sales office: [https://ws.interhome.com/ih/b2b/V0100/salesoffices/2020](https://ws.interhome.com/ih/b2b/V0100/salesoffices/2020)\r\nIn general, Interhome is the merchant of records (fulfillment Interhome). If the client is choosing to pay electronic (rather than by invoice), you are obliged to provide the Interhome payment URL, which you receive in the reservation response.\r\n## Endpoints\r\nTEST: [https://payment-test.interhome.com/payform.htm](https://payment-test.interhome.com/payform.htm)\r\n            \r\nPROD: [https://payment.interhome.com/payform.htm](https://payment.interhome.com/payform.htm)",
        "operationId": "EXAMPLE_collecting_payments_endpoint_NOT_USABLE_JUST_EXAMPLE",
        "parameters": [
          {
            "name": "Template",
            "in": "query",
            "description": "Template to be used (PSD2 compliance)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ct_responsive_ch"
          },
          {
            "name": "Reservation",
            "in": "query",
            "description": "Your Partner ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "202921500020"
          },
          {
            "name": "Currency",
            "in": "query",
            "description": "Capitalized 3-letter ISO 4217 currency code",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CurrencyEnum"
                }
              ],
              "description": "Special themes"
            },
            "example": "CHF"
          },
          {
            "name": "Orderdesc",
            "in": "query",
            "description": "Brief description of the service for which the payment is made",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "202921500020"
          },
          {
            "name": "Method",
            "in": "query",
            "description": "Chosen method",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PaymentMethodsEnum"
                }
              ],
              "description": "Supported payment methods"
            },
            "example": "CC"
          },
          {
            "name": "Language",
            "in": "query",
            "description": "Capitalized 2-letter ISO 639-1 code",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LanguagesEnum"
                }
              ],
              "description": ""
            },
            "example": "DE"
          },
          {
            "name": "Source",
            "in": "query",
            "description": "Possible Values iRent, IC",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ReservationSourceEnum"
                }
              ],
              "description": "Supported payment methods"
            },
            "example": "IRent"
          },
          {
            "name": "Amount",
            "in": "query",
            "description": "Amount to be payed",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "50"
          },
          {
            "name": "URLSuccess",
            "in": "query",
            "description": "URL encoded callback endpoint can be set by partner",
            "schema": {
              "type": "string"
            },
            "example": "https%3A%2F%2Fwww.partner.com%2Fsuccess.html"
          },
          {
            "name": "URLFailure",
            "in": "query",
            "description": "URL encoded callback endpoint can be set by partner",
            "schema": {
              "type": "string"
            },
            "example": "https%3A%2F%2Fwww.partner.com%2Ffailure.html"
          },
          {
            "name": "Userdata",
            "in": "query",
            "description": "URL encoded callback endpoint can be set by partner This parameter can be used to send data to the callback endpoints.",
            "schema": {
              "type": "string"
            },
            "example": "sessionid%3D987654%26custid%3D12345"
          }
        ],
        "responses": {
          "307": {
            "description": "Redirect to success or failure url"
          }
        }
      }
    },
    "/booking/reservation/ratify/{reservationNumber}": {
      "put": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.6 Ratify reservation",
        "description": "## Description\r\nRatifies a reservation that was originally created as a \"short\" option and makes it a confirmed reservation.\r\n## Use case\r\nThis method must be used to confirm a booking that was created as tentative \"short option\" (with parameters isOption: true, optionType: short). Unconfirmed \"short option\" bookings automatically expire after a given time.\r\n## Caching\r\nNo",
        "operationId": "UpdateRatifyReservationByReservationNumber",
        "parameters": [
          {
            "name": "reservationNumber",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "202016123456"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "410": {
            "description": "Reservation was cancelled already"
          },
          "400": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorType"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorType"
                }
              }
            }
          }
        }
      }
    },
    "/booking/reservation/list": {
      "get": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.7 Reservation list",
        "description": "## Description\r\nReturns all reservations (including options, cancellations) for the given partner or status code 404 if no reservation are found for your given search.\r\n## Use case\r\nThis method is typically used in an extra-net to display the current state of a booking. Additional details for each reservation can be retrieved using the Reservation Read method.\r\n## Caching\r\nYes. Output must be cached for at least 10 minutes to avoid unnecessary traffic.",
        "operationId": "ListReservations",
        "parameters": [
          {
            "name": "AccommodationCode",
            "in": "query",
            "description": "To set up on reservation list restricted by corresponding Accommodation Codes only Important: Multiple Accommodation Codes are interpreted as array list",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ModifiedSinceFrom",
            "in": "query",
            "description": "To set up on reservation list restricted by \"modified since from\". For example, to request only new reservations since last request date. ModifiedSinceFrom can be a date or a datetime value.",
            "schema": {
              "type": "string"
            },
            "example": "2016-06-24"
          },
          {
            "name": "ModifiedSinceTo",
            "in": "query",
            "description": "To set up on reservation list restricted by \"modified since to\" as range. For example, to request only reservations between \"modified since from. ModifiedSinceTo can be a date or a datetime value.",
            "schema": {
              "type": "string"
            },
            "example": "2016-06-24T10:00:00"
          },
          {
            "name": "ExcludeCancellations",
            "in": "query",
            "description": "By default, all reservations are requested. True means restricted by only not canceled reservations.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CheckInFrom",
            "in": "query",
            "description": "To set up on reservation list restricted by check-in date.",
            "schema": {
              "type": "string"
            },
            "example": "2016-06-24"
          },
          {
            "name": "CheckInTo",
            "in": "query",
            "description": "To set up on reservation list restricted by check-in date range.",
            "schema": {
              "type": "string"
            },
            "example": "2016-06-24"
          },
          {
            "name": "CreationDateFrom",
            "in": "query",
            "description": "To set up on reservation list restricted by creation date. Creation date can be a date or a datetime value.",
            "schema": {
              "type": "string"
            },
            "example": "2016-06-24"
          },
          {
            "name": "CreationDateTo",
            "in": "query",
            "description": "To set up on reservation list restricted by creation date range. Creation date can be a date or a datetime value.",
            "schema": {
              "type": "string"
            },
            "example": "2016-06-24T10%3A00%3A00"
          },
          {
            "name": "ReservationStateCode",
            "in": "query",
            "description": "To set up on reservation list restricted by reservation/ booking status.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ReservationStatusCodeEnum"
                }
              ],
              "description": "Reservation states"
            },
            "example": "OK"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReservationsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetReservationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Your search yielded no result"
          }
        }
      }
    },
    "/booking/reservation/voucher/{reservationNumber}": {
      "get": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.8 Voucher",
        "description": "## Description\r\nReturns data as printed on the \"voucher\" that customers need to present on check-in.\r\n## Note\r\nAccess to this method is limited to selected partners only!\r\n## Use case\r\nGenerate a voucher and send it to the client by email.\r\n## Caching\r\nNo",
        "operationId": "GetReservationVoucherByReservationNumber",
        "parameters": [
          {
            "name": "reservationNumber",
            "in": "path",
            "description": "Selects the corresponding Reservation",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "202016123456"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoucherRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoucherRs"
                }
              }
            }
          },
          "404": {
            "description": "Reservation number not found"
          }
        }
      }
    },
    "/booking/nextCheckInDate/{accommodationCode}": {
      "get": {
        "tags": [
          "6. Booking"
        ],
        "summary": "6.9 Next checkIn date",
        "description": "## Description\r\nThe method Next CheckIn Date returns the next possible reservation start date within 100 days of the given date for the specified duration and accommodation.\r\n## Use case\r\nTypically used to display the next possible date if the date chosen by the customer is already unavailable.\r\n## Caching\r\nNo",
        "operationId": "GetNextCheckInDateByAccommodationCode",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "Selects the corresponding accommodation",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH3920.4.1"
          },
          {
            "name": "CheckIn",
            "in": "query",
            "description": "Begin date of search, default is today",
            "schema": {
              "type": "string",
              "description": "Begin date of search, default is today",
              "format": "date"
            },
            "example": "2020-12-31"
          },
          {
            "name": "Duration",
            "in": "query",
            "description": "Duration of stay",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 7
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextCheckInDateRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NextCheckInDateRs"
                }
              }
            }
          },
          "404": {
            "description": "Reservation number not found"
          }
        }
      }
    },
    "/vacancy/{accommodationCode}": {
      "get": {
        "tags": [
          "7. Vacancy"
        ],
        "summary": "7.1 Vacancy",
        "description": "## Description\r\nReturns the availability information for a given property: all days in the specified range (in which the object is active) in an array, with corresponding codes for occupancy status, arrival/departure day, minimum stay and number of available units.\r\n## Use case\r\nTypically used to display the calendar information on a property details page.\r\n## Caching\r\nNo",
        "operationId": "ListAccommodationVacanciesByAccommodationCode",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "Selects the corresponding accommodation",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH3920.4.1"
          },
          {
            "name": "RangeFromDate",
            "in": "query",
            "description": "Range from",
            "schema": {
              "type": "string",
              "description": "Range from",
              "format": "date"
            },
            "example": "2020-01-01"
          },
          {
            "name": "RangeToDate",
            "in": "query",
            "description": "Range to",
            "schema": {
              "type": "string",
              "description": "Range from",
              "format": "date"
            },
            "example": "2020-12-01"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyRs"
                }
              }
            }
          },
          "404": {
            "description": "Accommodation not found"
          }
        }
      }
    },
    "/vacancy/string/{accommodationCode}": {
      "get": {
        "tags": [
          "7. Vacancy"
        ],
        "summary": "7.2.1 Vacancy string",
        "description": "## Description\r\nReturns the availability information for a given property in string format.\r\nDelivers 4 strings for occupancy status, arrival/departure day, minimum stay and allotment (units) where each character represents a single day starting at the specified range from date (or the first day on which the accommodation is active) and ending at the specified range to date (or the last day on which the object is active).\r\n## Use case\r\nTypically used to display the calendar information on a property details page.\r\n## Note\r\nMinimum stays of >26 days cannot be represented in the string format. It is advised to use Vacancy method instead. Important: At the moment, it is not possible to create on request reservations via API. In our Check Price response, you will also see <StateCode>RQ</StateCode>\r\n## Caching\r\nNo",
        "operationId": "GetAccommodationVacancyAsStringByAccommodationCode",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "Selects the corresponding accommodation",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH3920.4.1"
          },
          {
            "name": "RangeFromDate",
            "in": "query",
            "description": "Range from",
            "schema": {
              "type": "string",
              "description": "Range from",
              "format": "date"
            },
            "example": "2020-01-01"
          },
          {
            "name": "RangeToDate",
            "in": "query",
            "description": "Range to",
            "schema": {
              "type": "string",
              "description": "Range to",
              "format": "date"
            },
            "example": "2020-12-01"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyStringRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyStringRs"
                }
              }
            }
          },
          "404": {
            "description": "Accommodation not found"
          }
        }
      }
    },
    "/vacancy/trips/{accommodationCode}": {
      "get": {
        "tags": [
          "7. Vacancy"
        ],
        "summary": "7.3 Trips",
        "description": "## Description\r\nReturns all available reservation dates and durations for the selected accommodation. The date range can be restricted with one or both of the optional parameters RangeFromDate and RangeToDate. To select only Trips of a certain duration, the Duration parameter can be set. Note: At the moment, only durations 1-14, 21 and 28 are supported!\r\n## Use case\r\nTypically used to display the calendar information on a property details page.\r\n## Caching\r\nYes",
        "operationId": "ListAccommodationTripsByAccommodationCode",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "Selects the corresponding accommodation",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH3920.4.1"
          },
          {
            "name": "RangeFromDate",
            "in": "query",
            "description": "Range from",
            "schema": {
              "type": "string",
              "description": "Range from",
              "format": "date"
            },
            "example": "2020-01-01"
          },
          {
            "name": "RangeToDate",
            "in": "query",
            "description": "Range to",
            "schema": {
              "type": "string",
              "description": "Range to",
              "format": "date"
            },
            "example": "2020-12-01"
          },
          {
            "name": "Duration",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 7
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripsRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TripsRs"
                }
              }
            }
          },
          "404": {
            "description": "Accommodation not found"
          }
        }
      }
    },
    "/vacancy/checkinTrips/{accommodationCode}": {
      "get": {
        "tags": [
          "7. Vacancy"
        ],
        "summary": "7.4 CheckIn trips",
        "description": "## Description\r\nReturns all possible reservation duration of the selected accommodation including prices, special offers and booking status.",
        "operationId": "ListCheckInTripsByAccommodationCode",
        "parameters": [
          {
            "name": "accommodationCode",
            "in": "path",
            "description": "Selects the corresponding accommodation",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "CH3920.4.1"
          },
          {
            "name": "SalesOffice",
            "in": "query",
            "description": "SalesOffice to select prices",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2020
          },
          {
            "name": "Currency",
            "in": "query",
            "description": "Currency of the prices",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CurrencyEnum"
                }
              ],
              "description": "Special themes"
            },
            "example": "CHF"
          },
          {
            "name": "CheckIn",
            "in": "query",
            "description": "Desired check in date",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Check in",
              "format": "date"
            },
            "example": "2020-01-01"
          },
          {
            "name": "Language",
            "in": "query",
            "description": "Language of special offer description. Default is English",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LanguagesEnum"
                }
              ],
              "description": ""
            },
            "example": "De"
          }
        ],
        "responses": {
          "200": {
            "description": "Response returns all possible reservation durations for the specified check in date, with prices, special offers (if any) and booking status (OK/RQ).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckInTripsRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CheckInTripsRs"
                }
              }
            }
          },
          "404": {
            "description": "Accommodation not found"
          }
        }
      }
    },
    "/search": {
      "post": {
        "tags": [
          "8. Search"
        ],
        "summary": "8.1 Search",
        "description": "## Description\r\nThe Search method returns all accommodations matching the criteria specified and are still available. The complete result set can be accessed by pagination.\r\n            \r\nTo search for accommodations, POST a valid request in either JSON or XML format. The service will respond with all found accommodations for given request in case of success, or error messages in case of failure.\r\n            \r\nThe search function provides two endpoints:\r\n- /search is the \"default\" search endpoint which only returns the accommodation codes and prices. Use this endpoint if the accommodation details (attributes, picture URLs) are cached locally.\r\n- /search/max returns additional accommodation details. Please use this endpoint only if you have not cached the information since the response time takes quite longer.\r\n## Use case\r\nThis method is typically used to display a search result page to a client.\r\n## Caching\r\n- Pricing information should not be cached\r\n- When using /search/max, the accommodation details must be cached",
        "operationId": "GetSearch",
        "parameters": [
          {
            "name": "PaxSplit",
            "in": "query",
            "description": "If there are different prices depending on occupancy, the lowest price for the smallest occupancy available will be delivered with this parameter set to true. With value false or without this parameter you get the lowest price for maximum occupancy.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "Language",
            "in": "query",
            "description": "Language of special offer description. Default is English",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LanguagesEnum"
                }
              ],
              "description": ""
            },
            "example": "De"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchRqType"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "SearchRq"
                }
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchRqType"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "SearchRq"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchRs"
                }
              }
            }
          },
          "404": {
            "description": "Accommodation not found"
          }
        }
      }
    },
    "/search/max": {
      "post": {
        "tags": [
          "8. Search"
        ],
        "summary": "8.2 Search",
        "description": "## Description\r\nThe Search method returns all accommodations matching the criteria specified and are still available. The complete result set can be accessed by pagination.\r\n            \r\nTo search for accommodations, POST a valid request in either JSON or XML format. The service will respond with all found accommodations for given request in case of success, or error messages in case of failure.\r\n            \r\nThe search function provides two endpoints:\r\n- /search is the \"default\" search endpoint which only returns the accommodation codes and prices. Use this endpoint if the accommodation details (attributes, picture URLs) are cached locally.\r\n- /search/max returns additional accommodation details. Please use this endpoint only if you have not cached the information since the response time takes quite longer.\r\n## Use case\r\nThis method is typically used to display a search result page to a client.\r\n## Caching\r\n- Pricing information should not be cached\r\n- When using /search/max, the accommodation details must be cached",
        "operationId": "GetSearchMax",
        "parameters": [
          {
            "name": "PaxSplit",
            "in": "query",
            "description": "If there are different prices depending on occupancy, the lowest price for the smallest occupancy available will be delivered with this parameter set to true. With value false or without this parameter you get the lowest price for maximum occupancy.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "Language",
            "in": "query",
            "description": "Language of special offer description. Default is English",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LanguagesEnum"
                }
              ],
              "description": ""
            },
            "example": "De"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchRqType"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "SearchRq"
                }
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchRqType"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "SearchRq"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchRs"
                }
              }
            }
          },
          "404": {
            "description": "Accommodation not found"
          }
        }
      }
    },
    "/search/prices": {
      "post": {
        "tags": [
          "8. Search"
        ],
        "summary": "8.3 Search prices",
        "description": "## Description\r\nThe Search Prices method returns multiple prices for different accommodations / check-in dates.\r\nAll prices retrieved via this method are pre-calculated irrespective of actual availability.\r\nServices are not included in this price.\r\nIf a price for a given stay/accommodation cannot be retrieved, it will be omitted in the response. No warning will be given.",
        "operationId": "ListSearchPrices",
        "parameters": [
          {
            "name": "PaxSplit",
            "in": "query",
            "description": "If there are different prices depending on occupancy, the lowest price for the smallest occupancy available will be delivered with this parameter set to true. With value false or without this parameter you get the lowest price for maximum occupancy.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PricesRq"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "PriceRq"
                }
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PricesRq"
                  }
                ],
                "description": "",
                "xml": {
                  "name": "PriceRq"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricesRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PricesRs"
                }
              }
            }
          },
          "404": {
            "description": "Accommodation not found"
          }
        }
      }
    },
    "/exchangerates": {
      "get": {
        "tags": [
          "9. Exchange Rates"
        ],
        "summary": "9.1 Exchange Rates",
        "description": "## Description\r\nList of exchange rates\r\nThe base currency is always EUR.\r\n### Usage\r\nMultiply your EUR value with `ExchangeRate` to get the `ToCurrency` value\r\n            \r\nor\r\n            \r\ndivide `ToCurrency`value by `ExchangeRate` to receive EUR value.\r\n### Example\r\nTo CZK\r\n            \r\n100 € * 25.5 = 2550 CZK",
        "operationId": "ExchangeRates",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeRatesRs"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeRatesRs"
                }
              }
            }
          },
          "404": {
            "description": "Exchange rates not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccomSearchItemType": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Interhome Accommodation code.",
            "nullable": true,
            "example": "CH1961.762.1"
          },
          "BookingStatus": {
            "type": "string",
            "description": "Can be one of ReservationStatusCodeEnum\r\n- CA\r\n- CR\r\n- ER\r\n- OK\r\n- OP\r\n- OS\r\n- RQ\r\n- WW\r\n- XX\r\nor empty",
            "nullable": true,
            "example": "OK"
          },
          "Price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceItemType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AccomTypeAttributeXMLList": {
        "type": "object",
        "properties": {
          "Version": {
            "type": "integer",
            "format": "int32"
          },
          "AttributeXML": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccommodationAttributesEnum": {
        "enum": [
          "cots",
          "extrabeds",
          "pets",
          "pets_max",
          "small_pets",
          "small_pets_max",
          "no_pets_allowed",
          "aircondition",
          "bbq",
          "mountainbiking",
          "biking_plains",
          "billard",
          "breakfast",
          "carport",
          "central",
          "garage",
          "change_linen",
          "playground",
          "pool_children",
          "cleaning",
          "cook",
          "parking_covered",
          "dishwasher",
          "tumbler",
          "elevator",
          "themepark",
          "fenced",
          "fireplace",
          "fitness",
          "fresh_bread",
          "halfboard",
          "pool_heated",
          "hiking_mountains",
          "hiking_plains",
          "riding",
          "whirlpool",
          "maid_service",
          "massage",
          "metropolis",
          "microwave",
          "mountains_lakes",
          "nature",
          "nordic_walking",
          "oven",
          "parking",
          "patio",
          "phone",
          "pool",
          "pool_private",
          "tennis_private",
          "reception",
          "restaurant",
          "crosscountry_skiing",
          "safe_pool",
          "sailing",
          "sauna",
          "familyfriendly_summer",
          "single_garage",
          "smoke_alarm",
          "nightlife_summer",
          "suitable_seniors_summer",
          "sunny_position",
          "surfing",
          "tabletennis",
          "tennis",
          "terrace",
          "comfort",
          "historic",
          "luxury",
          "modern",
          "rustic",
          "washingmachine",
          "wellness",
          "fitnesswellness",
          "nightlife_winter",
          "suitable_seniors_winter",
          "detached",
          "dsl",
          "dvdplayer",
          "icerink",
          "pool_indoor_private",
          "pool_indoor",
          "internet",
          "isdn",
          "pool_outdoor_private",
          "pool_outdoor",
          "balcony",
          "freezer",
          "nonsmoking",
          "tv",
          "tv_international",
          "snowboard",
          "solarium",
          "toboggan",
          "winterwalkingpath",
          "wlan",
          "center",
          "apartment",
          "house_name",
          "chalet",
          "bungalow",
          "farmhouse",
          "manor-castle",
          "holiday_resort",
          "yacht",
          "fishing",
          "certified_fishing",
          "boat",
          "residence",
          "apart_hotel",
          "interior_luxurious",
          "interior_antique",
          "interior_rustic",
          "interior_modern",
          "sqm",
          "Cadastral_reference",
          "bathing_at_the_sea",
          "shower",
          "rest_and_relax_summer",
          "heating",
          "Familiyfriendly_winter",
          "familyfriendly_winter",
          "electric_vehicle_charging_station",
          "mountain_view",
          "action_and_fun_sports_winter",
          "skiarea",
          "action_and_fun_sports_summer",
          "bath_and_shower",
          "suitable_for_wheelchairs",
          "garden",
          "idylic",
          "typical_village",
          "winedine"
        ],
        "type": "string",
        "description": "<p>Members:</p>\n<ul>\n<li><p>cots</p>\n<p>Baby bed available (up to 2 years)</p>\n</li>\n<li><p>extrabeds</p>\n<p>Extra bed</p>\n</li>\n<li><p>pets</p>\n<p>In this accommodation 1 pet is allowed, but more can be requested. Size (large or small pet) is not defined.</p>\n</li>\n<li><p>pets_max</p>\n<p>In the accommodation a maximum number of pets are allowed.\nThere is no possibility to bring more pets than the max number (no need to request).\nPlease check the value in order to get the number.\nValue = number of pets allowed.</p>\n</li>\n<li><p>small_pets</p>\n<p>In this accommodation 1 small pet is allowed, but more can be requested.</p>\n</li>\n<li><p>small_pets_max</p>\n<p>In the accommodation a maximum number of small pets are allowed.\nThere is no possiblity to bring more pets than the max number (no need to request).\nPlease check the value in order to get the number.\nValue = number of small pets allowed.</p>\n</li>\n<li><p>no_pets_allowed</p>\n<p>In the accommodation no pets are allowed.</p>\n</li>\n<li><p>aircondition</p>\n<p>An air conditioning system is a technical facility whose temperature, humidity and air quality of one room can change\nand preserve</p>\n</li>\n<li><p>bbq</p>\n<p>Grill or barbecue provided (type not specified) or BBQ house available. For private or shared use.</p>\n</li>\n<li><p>mountainbiking</p>\n<p>Routes for the mountain biking sport (riding bicycles off-road)</p>\n</li>\n<li><p>biking_plains</p>\n<p>Biking trails</p>\n</li>\n<li><p>billard</p>\n<p>Billard sport</p>\n</li>\n<li><p>breakfast</p>\n<p>Possibility of taking or ordering breakfast</p>\n</li>\n<li><p>carport</p>\n<p>A shelter for cars with a roof and one or more open sides that can be built against the side of a house</p>\n</li>\n<li><p>central</p>\n<p>The accommodation has a central location. Short distances to shopping areas etc.</p>\n</li>\n<li><p>garage</p>\n<p>Garage is a closed parking space for vehicles.</p>\n</li>\n<li><p>change_linen</p>\n<p>Service - Change linen provided (free or extra)</p>\n</li>\n<li><p>playground</p>\n<p>Children's playground (children can climb, swing and play in the sand)</p>\n</li>\n<li><p>pool_children</p>\n<p>Swimming pool suitable for small children</p>\n</li>\n<li><p>cleaning</p>\n<p>Possibility of room/apartment cleaning (free or extra)</p>\n</li>\n<li><p>cook</p>\n<p>Chef can be reserved, on request</p>\n</li>\n<li><p>parking_covered</p>\n<p>Closed or covered, roofed parking space for vehicles</p>\n</li>\n<li><p>dishwasher</p>\n<p>A dishwasher is a kitchen utensil for the cleaning of dishes</p>\n</li>\n<li><p>tumbler</p>\n<p>Tumble dryer to dry clothes</p>\n</li>\n<li><p>elevator</p>\n<p>Lift in the accommodation</p>\n</li>\n<li><p>themepark</p>\n<p>Entertainment park offers showcases, carousels and other attractions for the entertainment of adults, young\npeople and children</p>\n</li>\n<li><p>fenced</p>\n<p>The property is fenced off permanently from the surrounding</p>\n</li>\n<li><p>fireplace</p>\n<p>An open or closed fireplace/stove in rooms often with fire-glass door</p>\n</li>\n<li><p>fitness</p>\n<p>Fitness room with sports facilities</p>\n</li>\n<li><p>fresh_bread</p>\n<p>Bread roll service garden Different types of garden, meadow or park</p>\n</li>\n<li><p>halfboard</p>\n<p>The half board is the accommodation rate that includes two meals per day (breakfast and either a lunch or\ndinner per day)</p>\n</li>\n<li><p>pool_heated</p>\n<p>The pool is heated</p>\n</li>\n<li><p>hiking_mountains</p>\n<p>Trails for hiking/walking - sport activity</p>\n</li>\n<li><p>hiking_plains</p>\n<p>Trails for hiking/walking - sport activity</p>\n</li>\n<li><p>riding</p>\n<p>Sport activity. Equestrian facility created for the purpose of accommodating, training or competing of horses</p>\n</li>\n<li><p>whirlpool</p>\n<p>Large tub or small pool full of heated water with jets used for hydrotherapy, relaxation or pleasure</p>\n</li>\n<li><p>maid_service</p>\n<p>Help in household on request</p>\n</li>\n<li><p>massage</p>\n<p>Treatment on the body with pressure (treating injuries and other problems affecting the musculature of the body)</p>\n</li>\n<li><p>metropolis</p>\n<p>Large cities</p>\n</li>\n<li><p>microwave</p>\n<p>Microwave oven heats food quickly</p>\n</li>\n<li><p>mountains_lakes</p>\n<p>Region with mountains and lakes</p>\n</li>\n<li><p>nature</p>\n<p>Region rich on nature</p>\n</li>\n<li><p>nordic_walking</p>\n<p>Fitness walking with specially designed poles</p>\n</li>\n<li><p>oven</p>\n<p>A device used for cooking and baking of food</p>\n</li>\n<li><p>parking</p>\n<p>Parking space for stopping and disengaging a vehicle and leaving it unoccupied</p>\n</li>\n<li><p>patio</p>\n<p>Patio, pergola, porch, sitting area - an outdoor space generally used for dining or recreation that adjoins a\nresidence</p>\n</li>\n<li><p>phone</p>\n<p>A telephone is a telecommunication device which is used to transmit and receive sound simultaneously</p>\n</li>\n<li><p>pool</p>\n<p>A pool for shared use, a structure to hold water and to enable swimming or other leisure activities</p>\n</li>\n<li><p>pool_private</p>\n<p>A pool for private use, a structure to hold water and to enable swimming or other leisure activities</p>\n</li>\n<li><p>tennis_private</p>\n<p>Tennis is a sport activity. The private tennis courts are available.</p>\n</li>\n<li><p>reception</p>\n<p>An office for welcoming of guests</p>\n</li>\n<li><p>restaurant</p>\n<p>Restaurant is offering drinks and food to consume</p>\n</li>\n<li><p>crosscountry_skiing</p>\n<p>Cross country skiing, Nordiques skiing</p>\n</li>\n<li><p>safe_pool</p>\n<p>Secured</p>\n</li>\n<li><p>sailing</p>\n<p>Possibility of sailing sport</p>\n</li>\n<li><p>sauna</p>\n<p>Small room or building designed as a place to experience dry or wet heat sessions</p>\n</li>\n<li><p>familyfriendly_summer</p>\n<p>Suitable for families</p>\n</li>\n<li><p>single_garage</p>\n<p>Garage is a closed parking space for vehicles</p>\n</li>\n<li><p>smoke_alarm</p>\n<p>Smoke alarm</p>\n</li>\n<li><p>nightlife_summer</p>\n<p>The place offers nightlife during the summer season</p>\n</li>\n<li><p>suitable_seniors_summer</p>\n<p>The place is suitable for elderly people</p>\n</li>\n<li><p>sunny_position</p>\n<p>Sunny position of the house</p>\n</li>\n<li><p>surfing</p>\n<p>Surfing - water sport activity</p>\n</li>\n<li><p>tabletennis</p>\n<p>Sport activity - also known as ping-pong.</p>\n</li>\n<li><p>tennis</p>\n<p>Tennis is a sport activity. The tennis courts are available.</p>\n</li>\n<li><p>terrace</p>\n<p>Different types of terrace or veranda in the property</p>\n</li>\n<li><p>comfort</p>\n<p>The house is comfortable and cozy furnished</p>\n</li>\n<li><p>historic</p>\n<p>An ancient/historical building, often from another century</p>\n</li>\n<li><p>luxury</p>\n<p>The furniture, infrastructure and equipment of the property is luxurious, very high quality</p>\n</li>\n<li><p>modern</p>\n<p>The furniture, infrastructure and equipment of the property are trendy and stylish</p>\n</li>\n<li><p>rustic</p>\n<p>The furniture of the property is homey and natural&gt;</p>\n</li>\n<li><p>washingmachine</p>\n<p>Washing machine available</p>\n</li>\n<li><p>wellness</p>\n<p>Spa area, wellness in place or in house</p>\n</li>\n<li><p>fitnesswellness</p>\n<p>Fitness room, whirlpool, massage, steam room windsurfing Possibility of windsurfing in place</p>\n</li>\n<li><p>nightlife_winter</p>\n<p>The place offers nightlife during the winter season</p>\n</li>\n<li><p>suitable_seniors_winter</p>\n<p>The place is suitable for elderly people</p>\n</li>\n<li><p>detached</p>\n<p>House, villa, chalet, bungalow, farmhouse, cottage, mobile home</p>\n</li>\n<li><p>dsl</p>\n<p>Digital subscriber line, installed for internet access</p>\n</li>\n<li><p>dvdplayer</p>\n<p>DVD player available</p>\n</li>\n<li><p>icerink</p>\n<p>Natural or artificial ice rink in place</p>\n</li>\n<li><p>pool_indoor_private</p>\n<p>Indoor swimming pool for private use</p>\n</li>\n<li><p>pool_indoor</p>\n<p>Indoor swimming pool for shared use</p>\n</li>\n<li><p>internet</p>\n<p>Internet access (wifi, DSL/LAN, ISDN)</p>\n</li>\n<li><p>isdn</p>\n<p>Dial up/ISDN</p>\n</li>\n<li><p>pool_outdoor_private</p>\n<p>Outdoor swimming pool for private use</p>\n</li>\n<li><p>pool_outdoor</p>\n<p>Outdoor swimming pool for shared use</p>\n</li>\n<li><p>balcony</p>\n<p>Exit to different outdoor areas (balcony, loggia etc.)</p>\n</li>\n<li><p>freezer</p>\n<p>A freezer is a device similar to a refrigerator that maintains a temperature below the freezing point of water</p>\n</li>\n<li><p>nonsmoking</p>\n<p>Smoking in the property is not allowed</p>\n</li>\n<li><p>tv</p>\n<p>All different types of TV</p>\n</li>\n<li><p>tv_international</p>\n<p>TV with international channels</p>\n</li>\n<li><p>snowboard</p>\n<p>Possibility of snowboarding, halfpipe on the slope</p>\n</li>\n<li><p>solarium</p>\n<p>Sun bed available</p>\n</li>\n<li><p>toboggan</p>\n<p>Winter sport activity - long slide in place</p>\n</li>\n<li><p>winterwalkingpath</p>\n<p>Winter walking paths</p>\n</li>\n<li><p>wlan</p>\n<p>Wifi available</p>\n</li>\n<li><p>center</p>\n<p>Central position of the property</p>\n</li>\n<li><p>apartment</p>\n<p>Flat, object in a house with several residential units. The apartment includes living, sleeping, cooking, and the\nsanitary facilities</p>\n</li>\n<li><p>house_name</p>\n<p>Name of the property</p>\n</li>\n<li><p>chalet</p>\n<p>For the most part wooden house with saddle roof, above-average quality</p>\n</li>\n<li><p>bungalow</p>\n<p>Smaller house of lighter construction</p>\n</li>\n<li><p>farmhouse</p>\n<p>Country house, farmhouse, cottage, working farm</p>\n</li>\n<li><p>manor-castle</p>\n<p>Large house belonging to the high-class society owner, a historical building which used to be the seat of the\naristocracy or used as a shelter</p>\n</li>\n<li><p>holiday_resort</p>\n<p>Holiday development, village, resort, holiday village, holiday complex</p>\n</li>\n<li><p>yacht</p>\n<p>Type of accommodation: houseboat, sailing boat, yacht</p>\n</li>\n<li><p>fishing</p>\n<p>Fishing possible</p>\n</li>\n<li><p>certified_fishing</p>\n<p>Only certified fishing possible</p>\n</li>\n<li><p>boat</p>\n<p>Boat available</p>\n</li>\n<li><p>residence</p>\n<p>Holiday resort with apartment houses and / or smaller houses, with reception, communal rooms, infrastructures\nlike sports facilities, often with animation</p>\n</li>\n<li><p>apart_hotel</p>\n<p>Same as residence, however with hotel management on request (apartment cleaning, change of bed linen, etc.)</p>\n</li>\n<li><p>interior_luxurious</p>\n<p>Luxurious furniture and infrastructure of the house</p>\n</li>\n<li><p>interior_antique</p>\n<p>Antique furniture and infrastructure of the house</p>\n</li>\n<li><p>interior_rustic</p>\n<p>Rustic furniture and infrastructure of the house</p>\n</li>\n<li><p>interior_modern</p>\n<p>Modern furniture and infrastructure of the house</p>\n</li>\n<li><p>sqm</p>\n<p>Max. size in square meter of the apartment in holiday complexes and residences only</p>\n</li>\n<li><p>Cadastral_reference</p>\n<p>Reference which is needed for French properties. Values are Residence Principale (RP) or Residence Secondaire (RS)</p>\n</li>\n<li><p>bathing_at_the_sea</p>\n<p>Suitable for bathing at the sea</p>\n</li>\n<li><p>shower</p>\n<p>Shower</p>\n</li>\n<li><p>rest_and_relax_summer</p>\n<p>The place is suitable to relax in summer</p>\n</li>\n<li><p>heating</p>\n<p>Heating</p>\n</li>\n<li><p>Familiyfriendly_winter</p>\n<p>Suitable for families in winter</p>\n</li>\n<li><p>familyfriendly_winter</p>\n<p>Suitable for families in winter</p>\n</li>\n<li><p>electric_vehicle_charging_station</p>\n<p>Electric vehicle charging station</p>\n</li>\n<li><p>mountain_view</p>\n<p>Offers views of the mountains</p>\n</li>\n<li><p>action_and_fun_sports_winter</p>\n<p>Action and fun sports activities in winter</p>\n</li>\n<li><p>skiarea</p>\n<p>Ski resort</p>\n</li>\n<li><p>action_and_fun_sports_summer</p>\n<p>Action and fun sports activities in summer</p>\n</li>\n<li><p>bath_and_shower</p>\n<p>Bath and shower</p>\n</li>\n<li><p>suitable_for_wheelchairs</p>\n<p>Wheelchair accessible</p>\n</li>\n<li><p>garden</p>\n<p>Garden area</p>\n</li>\n<li><p>idylic</p>\n<p>Idyllic surroundings</p>\n</li>\n<li><p>typical_village</p>\n<p>Typical village within the region</p>\n</li>\n<li><p>winedine</p>\n<p>Wine and dine</p>\n</li>\n</ul>\n"
      },
      "AccommodationDetailAddressType": {
        "type": "object",
        "properties": {
          "PostalCode": {
            "type": "string",
            "description": "PostalCode.",
            "nullable": true,
            "example": "5751"
          },
          "Longitude": {
            "type": "number",
            "description": "Coordinates: longitude of location.",
            "format": "double",
            "example": 12.808976
          },
          "Latitude": {
            "type": "number",
            "description": "Coordinates: latitude of location.",
            "format": "double",
            "example": 47.34835
          },
          "Accuracy": {
            "type": "string",
            "description": "EXACT – if the coordinates are accurate.\r\nZIP_ONLY – if the coordinates are based on zip code.",
            "nullable": true,
            "example": "EXACT"
          }
        },
        "additionalProperties": false,
        "description": "Location information."
      },
      "AccommodationDetailArrivalTimeType": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccommodationDetailTypeArrivalTimeData"
            },
            "description": "",
            "nullable": true
          },
          "ValidFrom": {
            "type": "string",
            "description": "Start of validity of the arrival times",
            "format": "date",
            "xml": {
              "attribute": true
            }
          },
          "ValidTo": {
            "type": "string",
            "description": "End of validity of the arrival times",
            "format": "date",
            "xml": {
              "attribute": true
            }
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AccommodationDetailArrivalTimeTypeItemArray": {
        "type": "object",
        "properties": {
          "ArrivalTime": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccommodationDetailArrivalTimeType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AccommodationDetailType": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Unique ID of an Interhome group accommodation.",
            "nullable": true,
            "example": "DE2981.100.3"
          },
          "Name": {
            "type": "string",
            "description": "Official marketing name of the accommodation.",
            "nullable": true,
            "example": "Haus Gnuss"
          },
          "CountryCode": {
            "type": "string",
            "description": "Country code of the accommodation (ISO 2).",
            "nullable": true,
            "example": "DE"
          },
          "Country": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccommodationDetailTypeCountry"
            },
            "description": "Country.",
            "nullable": true
          },
          "RegionCode": {
            "type": "integer",
            "description": "Internal region code of the accommodation.",
            "format": "int32",
            "example": 49
          },
          "Region": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccommodationDetailTypeRegion"
            },
            "description": "Region names.",
            "nullable": true
          },
          "PlaceCode": {
            "type": "integer",
            "description": "Internal place code of the accommodation.",
            "format": "int32",
            "example": 3920
          },
          "Place": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccommodationDetailTypePlace"
            },
            "description": "Place name.",
            "nullable": true
          },
          "Floor": {
            "type": "string",
            "description": "Can be numeric or character, depending on data.\r\n- 1-99\r\n- low-ground_floor\r\n- ground_floor\r\n- upper_floor\r\n- mezzanine_floor\r\n- top_floor\r\n- upper-ground_floor\r\n- lower-ground_floor",
            "nullable": true,
            "example": "2"
          },
          "Type": {
            "type": "string",
            "description": "Type of accommodation.\r\n- A = Apartment\r\n- H = House\r\n- B = Boat\r\n- G = Guestroom",
            "example": "H"
          },
          "DetailType": {
            "type": "string",
            "description": "Any of\r\n- A = Apartment/Hotel\r\n- B = Bungalow \r\n- C = Chalet\r\n- D = Divers\r\n- F = Farmhouse\r\n- H = Holiday village\r\n- R = Residence\r\n- S = Castle/Mansion\r\n- V = Villa\r\n- Y = Yacht",
            "example": "V"
          },
          "LivingSpace": {
            "type": "integer",
            "description": "Living space in square meters.",
            "format": "int32",
            "nullable": true,
            "example": 32
          },
          "Rooms": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoomsType"
              }
            ],
            "description": "Details of all rooms.",
            "nullable": true
          },
          "BedRooms": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BedRoomsType"
              }
            ],
            "description": "Number of rooms equipped with sleeping facilities.",
            "nullable": true
          },
          "BathRooms": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BathRoomsType"
              }
            ],
            "description": "Number of bath rooms.",
            "nullable": true
          },
          "Toilets": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ToiletsType"
              }
            ],
            "description": "Number of toilets.",
            "nullable": true
          },
          "Pax": {
            "type": "integer",
            "description": "Number of people the accommodation can accommodate (old display). It would now be more accurate to use PaxByValidity to\r\ndisplay pax and BabiesByValidity for extra babies which can be added to the max pax.",
            "format": "int32",
            "example": 4
          },
          "PaxByValidity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaxByValidityItemTypeArray"
              }
            ],
            "description": "Max pax by season.",
            "nullable": true
          },
          "BabiesByValidity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaxByValidityItemTypeArray"
              }
            ],
            "description": "Extra babies which can be added to the max pax by season.",
            "nullable": true
          },
          "Address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccommodationDetailAddressType"
              }
            ],
            "description": "Location information.",
            "nullable": true
          },
          "Evaluation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EvaluationType"
              }
            ],
            "description": "Our accommodation quality evaluation.",
            "nullable": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeTypeItemArray"
              }
            ],
            "description": "Attribute/amenities list.",
            "nullable": true
          },
          "Distances": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DistanceTypeItemArray"
              }
            ],
            "description": "POIs distances.",
            "nullable": true
          },
          "Themes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ThemeTypeItemArray"
              }
            ],
            "description": "See thematic classification of the accommodation.",
            "nullable": true
          },
          "Descriptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DescriptionTypeItemArray"
              }
            ],
            "description": "Language specific description.",
            "nullable": true
          },
          "ArrivalTimes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccommodationDetailArrivalTimeTypeItemArray"
              }
            ],
            "description": "Arrival and Departure times for this accommodation.",
            "nullable": true
          },
          "Media": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaItemTypeItemArray"
              }
            ],
            "description": "See accommodation/media for details.",
            "nullable": true
          },
          "CreationDate": {
            "type": "string",
            "description": "Date when the accommodation information was created.",
            "format": "date-time",
            "nullable": true,
            "example": "2007-04-17T10:22:50"
          },
          "LastModified": {
            "type": "string",
            "description": "Date when the accommodation information (texts, attributes) was last updated.",
            "format": "date-time",
            "nullable": true,
            "example": "2016-11-03T17:39:33"
          },
          "Rating": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccommodationTypeRating"
              }
            ],
            "description": "Rating from guest reviews.",
            "nullable": true
          },
          "Brand": {
            "type": "string",
            "description": "Interhome Group \"brand\".<br></br>\r\nPlease refer to Interhome Group brand codes for details.",
            "nullable": true,
            "example": "I"
          },
          "BuyingOfficeCode": {
            "type": "string",
            "description": "BuyingOfficeCode.",
            "nullable": true,
            "example": "ES020"
          },
          "DomesticCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": "Currency at the location of the accommodation.",
            "example": "EUR"
          },
          "OccupancyBasedPricing": {
            "type": "boolean",
            "description": "If the price is based on occupancy.",
            "nullable": true,
            "example": true
          },
          "HousingLicense": {
            "type": "string",
            "description": "License Code of property for specific countries.",
            "nullable": true,
            "example": "124565874"
          },
          "AttributeXmlList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccomTypeAttributeXMLList"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The Accommodation Detail includes all static data (descriptions, attributes, media URLs) of an accommodation."
      },
      "AccommodationDetailTypeArrivalTimeData": {
        "type": "object",
        "properties": {
          "WeekdayFrom": {
            "type": "integer",
            "description": "Weekdays, Monday(1), Tuesday(2), …. Sunday(7).",
            "format": "int32",
            "xml": {
              "attribute": true
            },
            "example": 1
          },
          "WeekdayTo": {
            "type": "integer",
            "description": "Weekdays, Monday(1), Tuesday(2), …. Sunday(7).",
            "format": "int32",
            "xml": {
              "attribute": true
            },
            "example": 7
          },
          "OnAppointment": {
            "type": "boolean",
            "description": "Value “false” or “true”.",
            "xml": {
              "attribute": true
            },
            "example": true
          },
          "TimeFrom": {
            "type": "string",
            "description": "Time window start.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "12:00"
          },
          "TimeTo": {
            "type": "string",
            "description": "Time window end.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "14:00"
          },
          "Type": {
            "type": "string",
            "description": "  Type of time windows.\r\nValue “A” (ArrivalTimes) or “D” (Departure Times).",
            "xml": {
              "attribute": true
            },
            "example": "A"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AccommodationDetailTypeCountry": {
        "type": "object",
        "properties": {
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Language code of the content item.",
            "xml": {
              "attribute": true
            },
            "example": "EN"
          },
          "Content": {
            "type": "string",
            "description": "Name of the country.",
            "nullable": true,
            "example": "Germany"
          }
        },
        "additionalProperties": false,
        "description": "Country name for specific language."
      },
      "AccommodationDetailTypePlace": {
        "type": "object",
        "properties": {
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Language.",
            "xml": {
              "attribute": true
            },
            "example": "EN"
          },
          "Content": {
            "type": "string",
            "description": "Place.",
            "nullable": true,
            "example": "Llombards/C.Llombards/C.S'Almonia"
          }
        },
        "additionalProperties": false,
        "description": "Place name in specific Language."
      },
      "AccommodationDetailTypeRegion": {
        "type": "object",
        "properties": {
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Language.",
            "xml": {
              "attribute": true
            },
            "example": "DE"
          },
          "Content": {
            "type": "string",
            "description": "Region name.",
            "nullable": true,
            "example": "Bayern"
          }
        },
        "additionalProperties": false,
        "description": "Region name in specific language."
      },
      "AccommodationDetailsRs": {
        "type": "object",
        "properties": {
          "Accommodation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccommodationDetailType"
              }
            ],
            "description": "Accommodation detail item.",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Accommodation Detail includes all static data (descriptions, attributes, media URLs) of an accommodation.",
        "xml": {
          "name": "AccommodationRs"
        }
      },
      "AccommodationListItemType": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Unique ID of an Interhome Group property.",
            "nullable": true,
            "example": "ES9410.845.1"
          },
          "Name": {
            "type": "string",
            "description": "Marketing Name of the accommodation.",
            "nullable": true,
            "example": "Nuvol Blau"
          },
          "LastModifiedSince": {
            "type": "string",
            "description": "Date and Time when the accommodation information was last updated.",
            "format": "date-time",
            "example": "2021-01-30T01:19:30"
          },
          "ValidFrom": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true,
            "example": "2021-02-12"
          },
          "ValidTo": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true,
            "example": "2021-11-26"
          },
          "Brand": {
            "type": "string",
            "description": "Interhome Group \"brand\".\r\nPlease refer to BrandCodesEnum for details.",
            "nullable": true,
            "example": "I"
          },
          "LastModifiedTypes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LastModifiedTypesArrayItems"
              }
            ],
            "description": "List of detailed information when specific parts of the accommodation where changed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AccommodationListRs": {
        "type": "object",
        "properties": {
          "AccommodationItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccommodationListItemType"
            },
            "description": "List of all accommodations (code, name, date of modification) with an active contract or error information.",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "AccommodationListRs"
        }
      },
      "AccommodationMediaRs": {
        "type": "object",
        "properties": {
          "MediaItems": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaItemsType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "AccommodationMediaRs"
        }
      },
      "AccommodationPriceAllDurRs": {
        "type": "object",
        "properties": {
          "PriceList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceListAllDurType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "AccommodationPriceAllDurRs"
        }
      },
      "AccommodationPriceRs": {
        "type": "object",
        "properties": {
          "PriceList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceListType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "AccommodationPriceRs"
        }
      },
      "AccommodationServiceRsServices": {
        "type": "object",
        "properties": {
          "ServiceItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AccommodationSvcRs": {
        "type": "object",
        "properties": {
          "Services": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccommodationServiceRsServices"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "AccommodationSvcRs"
        }
      },
      "AccommodationTypeRating": {
        "type": "object",
        "properties": {
          "OverAllRating": {
            "type": "number",
            "description": "OverallRating",
            "format": "double",
            "nullable": true,
            "example": 3
          },
          "NbrOfReviews": {
            "type": "integer",
            "description": "Shows number of Reviews",
            "format": "int32",
            "nullable": true,
            "example": 12
          }
        },
        "additionalProperties": false,
        "description": "Guest rating"
      },
      "AddServicesType": {
        "type": "object",
        "properties": {
          "AdditionalServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AddressTypeAddress": {
        "type": "object",
        "properties": {
          "Contacts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactTypeContactItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactTypeEnum"
              }
            ],
            "description": "Type of Address.\r\n### Possible values\r\n- CU = client\r\n- SU = supplier",
            "xml": {
              "attribute": true
            },
            "example": "CU"
          },
          "Salutation": {
            "type": "string",
            "description": "### Possible values\r\n- 0001 = Mr\r\n- 0002 = Ms\r\n- 0003 = Mr & Ms\r\n- 0004 = company\r\n- 0005 = undefined",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": ""
          },
          "Firstname": {
            "type": "string",
            "description": "Firstname.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "John"
          },
          "Lastname": {
            "type": "string",
            "description": "Lastname.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Doe"
          },
          "Street": {
            "type": "string",
            "description": "Street name and number.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Example street 1"
          },
          "PO_Box": {
            "type": "string",
            "description": "PO Box.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "0000000000"
          },
          "Country": {
            "type": "string",
            "description": "Capitalized 2-digit ISO 31661 alpha2 country code.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "CH"
          },
          "Countryname": {
            "type": "string",
            "description": "Countryname.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Switzerland"
          },
          "State": {
            "type": "string",
            "description": "Stat, if any.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Zermatt"
          },
          "Zip": {
            "type": "string",
            "description": "ZIP.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "8000"
          },
          "Place": {
            "type": "string",
            "description": "Place.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Zurich"
          },
          "Longitude": {
            "type": "number",
            "description": "Longitude.",
            "format": "double",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": 49.168545
          },
          "Latitude": {
            "type": "number",
            "description": "Latitude.",
            "format": "double",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": -5.49817
          },
          "Longitude_GMS": {
            "type": "string",
            "description": "Longitude GMS.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "East 2°44'54''"
          },
          "Latitude_GMS": {
            "type": "string",
            "description": "Latitude GMS.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "North 41°1'18''"
          },
          "AddressLine1": {
            "type": "string",
            "description": "Additional information to Address.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Imperial"
          },
          "AddressLine2": {
            "type": "string",
            "description": "More additional information to Address.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": ""
          },
          "Url": {
            "type": "string",
            "description": "URL.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "www.interhome.ch/CH3920.45.1"
          },
          "Acadtitle": {
            "type": "string",
            "description": "Name of booked Holiday Home.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Imperial"
          },
          "Brand": {
            "type": "string",
            "description": "Interhome Group Brand.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "I"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AddressTypeAddressItemArray": {
        "type": "object",
        "properties": {
          "Address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressTypeAddress"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Alert": {
        "type": "object",
        "properties": {
          "Alerts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlertTypeAlertItemArray"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AlertType": {
        "type": "object",
        "properties": {
          "Alert": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertTypeAlert"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AlertTypeAlert": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string",
            "description": "Titel of the Alert.",
            "nullable": true,
            "example": "Building work taking place at the property"
          },
          "Description": {
            "type": "string",
            "description": "Description of the Alert.",
            "nullable": true,
            "example": "Building work taking place at the property"
          },
          "ValidFrom": {
            "type": "string",
            "description": "Date, when the Alert is valid from.",
            "format": "date-time",
            "example": "2022-08-07"
          },
          "ValidTo": {
            "type": "string",
            "description": "Date, until when the Alert is valid to.",
            "format": "date-time",
            "example": "2022-12-31"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AlertTypeAlertItemArray": {
        "type": "object",
        "properties": {
          "Alert": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertTypeAlert"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AttributeType": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "Attribute type.",
            "nullable": true,
            "example": "attribute"
          },
          "Name": {
            "type": "string",
            "description": "Attribute name.",
            "nullable": true,
            "example": "cots"
          },
          "Value": {
            "type": "string",
            "description": "Attribute value/amount.",
            "nullable": true,
            "example": "2"
          },
          "Property": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "Assignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeTypeAssignment"
              }
            ],
            "description": "",
            "nullable": true
          },
          "ValidFrom": {
            "type": "string",
            "description": "",
            "format": "date",
            "nullable": true,
            "example": "2022-12-20"
          },
          "ValidTo": {
            "type": "string",
            "description": "",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Attribute/amenity information."
      },
      "AttributeTypeAssignment": {
        "enum": [
          "country",
          "place",
          "house",
          "accommodation"
        ],
        "type": "string",
        "description": "<p>Members:</p>\n<ul>\n<li><p>country</p>\n</li>\n<li><p>place</p>\n</li>\n<li><p>house</p>\n</li>\n<li><p>accommodation</p>\n</li>\n</ul>\n"
      },
      "AttributeTypeItemArray": {
        "type": "object",
        "properties": {
          "Attribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "BankType": {
        "type": "object",
        "properties": {
          "BankName": {
            "type": "string",
            "description": "Name of the Bank.",
            "nullable": true,
            "example": "Credit Suisse, CH-8070 Zürich"
          },
          "BankNumber": {
            "type": "string",
            "description": "Number of the Bank.",
            "nullable": true,
            "example": "4835"
          },
          "BankAccount": {
            "type": "string",
            "description": "Number of Bank account.",
            "nullable": true,
            "example": "384154-11"
          },
          "Swift": {
            "type": "string",
            "description": "Swift of the Bank.",
            "nullable": true,
            "example": "CRESCHZZ80A"
          },
          "Iban": {
            "type": "string",
            "description": "IBAN of the Bank.",
            "nullable": true,
            "example": "CH5104835038415411000"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "BathRoomsType": {
        "type": "object",
        "properties": {
          "Number": {
            "type": "integer",
            "description": "Number of bath rooms.",
            "format": "int32",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "Number of bath rooms."
      },
      "BedRoomsType": {
        "type": "object",
        "properties": {
          "Number": {
            "type": "integer",
            "description": "Number of rooms equipped with sleeping facilities.",
            "format": "int32",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "Number of rooms equipped with sleeping facilities."
      },
      "BookingHeaderPriceType": {
        "required": [
          "AccommodationCode",
          "Adults",
          "Babies",
          "CheckIn",
          "CheckOut",
          "Children",
          "Currency",
          "Language",
          "SalesOffice"
        ],
        "type": "object",
        "properties": {
          "SalesOffice": {
            "type": "integer",
            "description": "The SalesOffice to carry out the price check or reservation.",
            "format": "int32",
            "example": 2048
          },
          "AccommodationCode": {
            "type": "string",
            "description": "Interhome Group accommodation code.",
            "example": "DE2981.100.3"
          },
          "Adults": {
            "type": "integer",
            "description": "Number of Adults.",
            "format": "int32",
            "example": 1
          },
          "Children": {
            "type": "integer",
            "description": "Number of Children.",
            "format": "int32",
            "example": 2
          },
          "Babies": {
            "type": "integer",
            "description": "Number of Babies.",
            "format": "int32",
            "example": 1
          },
          "CheckIn": {
            "type": "string",
            "description": "Start date",
            "format": "date",
            "example": "2023-10-01"
          },
          "CheckOut": {
            "type": "string",
            "description": "End date",
            "format": "date",
            "example": "2010-10-08"
          },
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Customer language.",
            "example": "EN"
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": "Currency for the price check/booking.",
            "example": "EUR"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "BrandCodesEnum": {
        "enum": [
          "ALP",
          "AMA",
          "APA",
          "FER",
          "I",
          "IL",
          "IC",
          "ICB",
          "ICI",
          "ICV",
          "ICC",
          "ICM",
          "ICP",
          "L",
          "M",
          "NFM",
          "ODA",
          "S",
          "SOW",
          "SPR",
          "SUC",
          "TAB",
          "Y",
          "Z"
        ],
        "type": "string",
        "description": "<p>Interhome Group Brand Codes</p>\n<ul>\n<li>Our files and APIs may contain a field called or that you can use to differentiate between Interhome accommodations and properties supplied by 3rd parties.</li>\n<li>Sometimes not all languages are supported by 3rd party products</li>\n<li>Some 3rd party products do not support daily prices</li>\n<li>Photos might have lower quality(sometimes up-scaled)</li>\n<li>Exceptions for &quot;host to host&quot; content: RetailerBooking method is possible until 32 days before check-in only</li>\n</ul>\n<p>Members:</p>\n<ul>\n<li><p>ALP</p>\n<p>Alps Resorts</p>\n<ul>\n<li>standard product</li>\n</ul>\n</li>\n<li><p>AMA</p>\n<p>Interhome</p>\n<ul>\n<li>standard product</li>\n</ul>\n</li>\n<li><p>APA</p>\n<p>Interhome</p>\n<ul>\n<li>standard product</li>\n</ul>\n</li>\n<li><p>FER</p>\n<p>Feratel</p>\n<ul>\n<li>3rd party property</li>\n<li>Only limited pricing information available(no daily prices)</li>\n<li>Prices + availabilities are updated hourly</li>\n<li>Descriptions available mostly only in languages DE, FR, EN</li>\n<li>Some accommodations have a minimum occupancy which may cause price requests to fail(error message &quot;Object is not available&quot;). Request prices with maximum occupancy as workaround.</li>\n<li>&quot;host to host&quot;</li>\n</ul>\n</li>\n<li><p>I</p>\n<p>Interhome</p>\n<ul>\n<li>standard product</li>\n</ul>\n</li>\n<li><p>IL</p>\n<p>Interhome LIGHT</p>\n<ul>\n<li>3rd party property</li>\n<li>Descriptions available mostly only in languages DE, FR, EN, ES, PL, IT, NL, DA, CS</li>\n</ul>\n</li>\n<li><p>IC</p>\n<p>Interchalet</p>\n<ul>\n<li>Standard product</li>\n<li>No possibility for (short) options</li>\n</ul>\n</li>\n<li><p>ICB</p>\n<p>Interchalet</p>\n<ul>\n<li>3rd party property</li>\n<li>No possibility for (short) options</li>\n</ul>\n</li>\n<li><p>ICI</p>\n<p>Interchalet</p>\n<ul>\n<li>3rd party property</li>\n<li>No possibility for (short) options</li>\n</ul>\n</li>\n<li><p>ICV</p>\n<p>Interchalet</p>\n<ul>\n<li>3rd party property</li>\n<li>No possibility for (short) options</li>\n</ul>\n</li>\n<li><p>ICC</p>\n<p>Interchalet</p>\n<ul>\n<li>3rd party property</li>\n<li>No possibility for (short) options</li>\n</ul>\n</li>\n<li><p>ICM</p>\n<p>Interchalet</p>\n<ul>\n<li>3rd party property</li>\n<li>No possibility for (short) options</li>\n</ul>\n</li>\n<li><p>ICP</p>\n<p>Interchalet</p>\n<ul>\n<li>3rd party property</li>\n<li>No possibility for (short) options</li>\n</ul>\n</li>\n<li><p>L</p>\n<p>Lomarengas</p>\n<ul>\n<li>3rd party property</li>\n<li>Only limited pricing information available(no daily prices)</li>\n<li>No &quot;outside description&quot;, all property information is included in &quot;inside&quot; description</li>\n<li>Descriptions available mostly only in language DE</li>\n<li>Only Picture type inside even though it might have an outside view</li>\n<li>&quot;host to host&quot;</li>\n</ul>\n</li>\n<li><p>M</p>\n<p>Interhome</p>\n<ul>\n<li>standard product</li>\n<li>No sales in ES and HR</li>\n</ul>\n</li>\n<li><p>NFM</p>\n<p>Interhome</p>\n<ul>\n<li>Standard product</li>\n</ul>\n</li>\n<li><p>ODA</p>\n<p>Odalys</p>\n<ul>\n<li>Standard product</li>\n</ul>\n</li>\n<li><p>S</p>\n<p>Tomas</p>\n<ul>\n<li>3rd party property</li>\n<li>Only limited pricing information available(no daily prices)</li>\n<li>Mostly only translations for DE, FR, EN</li>\n<li>No possibility for (short) options</li>\n<li>&quot;host to host&quot;</li>\n</ul>\n</li>\n<li><p>SOW</p>\n<p>Sowel</p>\n<ul>\n<li>Standard product</li>\n</ul>\n</li>\n<li><p>SPR</p>\n<p>Interhome</p>\n<ul>\n<li>Standard product</li>\n</ul>\n</li>\n<li><p>SUC</p>\n<p>Interhome</p>\n<ul>\n<li>3rd party property</li>\n</ul>\n</li>\n<li><p>TAB</p>\n<p>Interhome</p>\n<ul>\n<li>Standard product</li>\n<li>No possibility for (short) options</li>\n<li>&quot;host to host&quot;</li>\n</ul>\n</li>\n<li><p>Y</p>\n<p>Center Parcs</p>\n<ul>\n<li>Standard product</li>\n</ul>\n</li>\n<li><p>Z</p>\n<p>Sun Parks</p>\n<ul>\n<li>Standard product</li>\n</ul>\n</li>\n</ul>\n"
      },
      "ByValidityItemType": {
        "type": "object",
        "properties": {
          "Value": {
            "type": "integer",
            "description": "Max Number of adults and children / Babies allowed in the accommodation.",
            "format": "int32",
            "example": 4
          },
          "ValidFrom": {
            "type": "string",
            "description": "Valid start date for the number of pax",
            "format": "date",
            "example": "2019-07-12"
          },
          "ValidTo": {
            "type": "string",
            "description": "Valid end date for the number of pax",
            "format": "date",
            "example": "2019-07-27"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CancelConditionType": {
        "type": "object",
        "properties": {
          "DaysBefore": {
            "type": "integer",
            "description": "Number of days before arrival.",
            "format": "int32",
            "example": 1
          },
          "Percent": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CancelConditionsRs": {
        "type": "object",
        "properties": {
          "CancelConditions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CancelConditionsRsCancelConditions"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "CancelConditionsRs"
        }
      },
      "CancelConditionsRsCancelConditions": {
        "type": "object",
        "properties": {
          "CancelCondition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancelConditionType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CancelConditionsType": {
        "type": "object",
        "properties": {
          "CancelCondition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancelConditionType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CheckInTripType": {
        "type": "object",
        "properties": {
          "CheckOut": {
            "type": "string",
            "description": "Check-out",
            "format": "date",
            "example": "2021-05-08"
          },
          "Price": {
            "type": "number",
            "description": "Regular price for given duration.",
            "format": "double",
            "example": 102.24
          },
          "SpecialPrice": {
            "type": "number",
            "description": "If there is any special offer, there will be shown a special price.",
            "format": "double",
            "nullable": true,
            "example": 100.47
          },
          "SpecialCode": {
            "type": "string",
            "description": "Code of the special offer, if any.",
            "nullable": true,
            "example": "LO/00000001"
          },
          "SpecialDescription": {
            "type": "string",
            "description": "Description of special offer, if any.",
            "nullable": true,
            "example": "Long stay"
          },
          "BookingStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationStatusCodeEnum"
              }
            ],
            "description": "Booking status.\r\n(see ReservationStatusCodeEnum for details)",
            "example": "OK"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CheckInTripsRs": {
        "type": "object",
        "properties": {
          "CheckIn": {
            "type": "string",
            "description": "Check-in",
            "format": "date",
            "example": "2021-05-25"
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": "Requested currency.",
            "example": "CHF"
          },
          "Trips": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CheckInTripsRsTrips"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "CheckInTripsRs"
        }
      },
      "CheckInTripsRsTrips": {
        "type": "object",
        "properties": {
          "Trip": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckInTripType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CheckPossibleRs": {
        "type": "object",
        "properties": {
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "CheckPossibleRs"
        }
      },
      "CheckPriceRq": {
        "required": [
          "BookingHeader"
        ],
        "type": "object",
        "properties": {
          "BookingHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookingHeaderPriceType"
              }
            ],
            "description": ""
          },
          "Services": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceInputTypeItemArray"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "CheckPriceRq"
        }
      },
      "CheckPriceRs": {
        "type": "object",
        "properties": {
          "Alerts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlertType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "CancelConditions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CancelConditionsType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "OptionConditions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CheckPriceRsOptionConditions"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceItemType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Services": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CheckPriceRsServices"
              }
            ],
            "description": "",
            "nullable": true
          },
          "StateCode": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "CheckPriceRs"
        }
      },
      "CheckPriceRsOptionConditions": {
        "type": "object",
        "properties": {
          "OptionCondition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionConditionType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CheckPriceRsServices": {
        "type": "object",
        "properties": {
          "Service": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ContactMediumTypeEnum": {
        "enum": [
          "TELB",
          "TELP",
          "MOB",
          "MAIL"
        ],
        "type": "string",
        "description": "<p>Supported payment methods</p>\n<p>Members:</p>\n<ul>\n<li><p>TELB</p>\n<p>Telephone Business</p>\n</li>\n<li><p>TELP</p>\n<p>Telephone Private</p>\n</li>\n<li><p>MOB</p>\n<p>Mobile</p>\n</li>\n<li><p>MAIL</p>\n<p>Mail</p>\n</li>\n</ul>\n"
      },
      "ContactTypeContact": {
        "type": "object",
        "properties": {
          "MainEntry": {
            "type": "boolean",
            "description": "Indicate, if this is the main entry or not.",
            "xml": {
              "attribute": true
            },
            "example": true
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactMediumTypeEnum"
              }
            ],
            "description": "Type of contact.",
            "xml": {
              "attribute": true
            },
            "example": "MAIL"
          },
          "Value": {
            "type": "string",
            "description": "Value of contact type.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "John.doe@example.ch"
          },
          "Seqnr": {
            "type": "string",
            "description": "Interhome Group internal value – can be ignored by the Partner.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "2"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ContactTypeContactItemArray": {
        "type": "object",
        "properties": {
          "Contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactTypeContact"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ContactTypeEnum": {
        "enum": [
          "CU",
          "SU"
        ],
        "type": "string",
        "description": "<p>Supported payment methods</p>\n<p>Members:</p>\n<ul>\n<li><p>CU</p>\n<p>Client/Customer</p>\n</li>\n<li><p>SU</p>\n<p>Supplier</p>\n</li>\n</ul>\n"
      },
      "CostAndServices": {
        "type": "object",
        "properties": {
          "InclRentCost": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CostAndServicesTypeItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "BookAdd": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CostAndServicesTypeItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "AddContrtb": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CostAndServicesTypeItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "LoclBook": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CostAndServicesTypeItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "LoclMandCost": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CostAndServicesTypeItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "PayOnSpot": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CostAndServicesTypeItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "SelfOrg": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CostAndServicesTypeItemArray"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CostAndServicesType": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string",
            "description": "",
            "nullable": true,
            "xml": {
              "attribute": true
            }
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": ""
          },
          "SellPrice": {
            "type": "number",
            "description": "",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "SelPriceDescription": {
            "type": "string",
            "description": "",
            "nullable": true,
            "xml": {
              "attribute": true
            }
          },
          "VatDescription": {
            "type": "string",
            "description": "",
            "nullable": true,
            "xml": {
              "attribute": true
            }
          },
          "VatAmount": {
            "type": "number",
            "description": "",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "DetailGroup": {
            "type": "string",
            "description": "",
            "nullable": true,
            "xml": {
              "attribute": true
            }
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CostAndServicesTypeItemArray": {
        "type": "object",
        "properties": {
          "IncludedService": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostAndServicesType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CountryType": {
        "type": "object",
        "properties": {
          "CountryCode": {
            "type": "string",
            "description": "Country code.",
            "nullable": true,
            "example": "CH"
          },
          "CountryName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryTypeCountryName"
            },
            "description": "",
            "nullable": true
          },
          "GeoCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeoCoordinatesType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Regions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RegionTypeItemType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CountryTypeCountryName": {
        "type": "object",
        "properties": {
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Language of the text elements. Default is english.",
            "xml": {
              "attribute": true
            },
            "example": "EN"
          },
          "Value": {
            "type": "string",
            "description": "Name of the country in chosen Language.",
            "nullable": true,
            "example": "Switzerland"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CreateResCustomerType": {
        "required": [
          "Country",
          "Firstname",
          "Lastname",
          "Salutation",
          "Street",
          "Zip"
        ],
        "type": "object",
        "properties": {
          "Salutation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/zititle_medi"
              }
            ],
            "description": "Salutation of client.",
            "example": "Mr"
          },
          "Firstname": {
            "type": "string",
            "description": "Firstname of client.",
            "example": "John"
          },
          "Lastname": {
            "type": "string",
            "description": "Lastname of client.",
            "example": "Doe"
          },
          "AddressLine1": {
            "type": "string",
            "description": "Address information of client.",
            "nullable": true,
            "example": ""
          },
          "AddressLine2": {
            "type": "string",
            "description": "Address information of client.",
            "nullable": true,
            "example": ""
          },
          "Street": {
            "type": "string",
            "description": "Street and number of client.",
            "example": "Examplestreet 1"
          },
          "Country": {
            "type": "string",
            "description": "Country of client.",
            "example": "CH"
          },
          "Zip": {
            "type": "string",
            "description": "ZIP of client.",
            "example": "8000"
          },
          "Place": {
            "type": "string",
            "description": "Place of client.",
            "nullable": true,
            "example": "Zurich"
          },
          "State": {
            "type": "string",
            "description": "Sate of client, if any.",
            "nullable": true,
            "example": ""
          },
          "PhoneNumber": {
            "type": "string",
            "description": "Phone number of client.",
            "nullable": true,
            "example": "0041123123123"
          },
          "MobileNumber": {
            "type": "string",
            "description": "Mobile n umber of client.",
            "nullable": true,
            "example": "004179123123"
          },
          "FaxNumber": {
            "type": "string",
            "description": "Fax number of client.",
            "nullable": true,
            "example": "0041123123123"
          },
          "EmailAddress": {
            "type": "string",
            "description": "Email Address of client.",
            "nullable": true,
            "example": "john.doe@example.com"
          },
          "Birthday": {
            "type": "string",
            "description": "",
            "format": "date",
            "nullable": true,
            "example": "2001-05-04"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CreateResHeaderType": {
        "required": [
          "AccommodationCode",
          "Adults",
          "Babies",
          "CheckIn",
          "CheckOut",
          "Children",
          "Currency",
          "Fulfillment",
          "IsOption",
          "Language",
          "OptionType",
          "PaymentType",
          "SalesOffice"
        ],
        "type": "object",
        "properties": {
          "SalesOffice": {
            "type": "string",
            "description": "Interhome Sales office",
            "example": "2048"
          },
          "AccommodationCode": {
            "type": "string",
            "description": "Interhome Group Accommodation Code",
            "example": "DE2981.100.3"
          },
          "Adults": {
            "type": "integer",
            "description": "Number of adults / total travelers",
            "format": "int32",
            "example": 2
          },
          "Children": {
            "type": "integer",
            "description": "Number of children (0 if unknown)",
            "format": "int32",
            "example": 1
          },
          "Babies": {
            "type": "integer",
            "description": "Number of babies (0 if unknown)",
            "format": "int32",
            "example": 1
          },
          "CheckIn": {
            "type": "string",
            "description": "Checkin date",
            "format": "date",
            "example": "2022-10-01"
          },
          "CheckOut": {
            "type": "string",
            "description": "Checkout date",
            "format": "date",
            "example": "2022-10-08"
          },
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Customer language; must be a supported booking language",
            "example": "en"
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": "Currency for teh price check / booking",
            "example": "EUR"
          },
          "PartnerID": {
            "type": "string",
            "description": "???",
            "nullable": true,
            "example": ""
          },
          "PartnerIDExtra": {
            "type": "string",
            "description": "Optional: additional / internal id of the sales partner (alphanumeric, max. 32 characters)",
            "nullable": true,
            "example": "953"
          },
          "PartnerContact": {
            "type": "string",
            "description": "Optional: name / contact info to agent",
            "nullable": true,
            "example": ""
          },
          "IsOption": {
            "type": "boolean",
            "description": "Element must be present and always false (?)",
            "example": false
          },
          "OptionType": {
            "type": "string",
            "description": "Element must be present and should be blank/empty (Allowed values [blank], short)",
            "example": ""
          },
          "PaymentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentTypeReservationType"
              }
            ],
            "description": "sets the payment method",
            "example": "invoice"
          },
          "PromoCode": {
            "type": "string",
            "description": "Promotion code.",
            "nullable": true,
            "example": ""
          },
          "ExternalReference": {
            "type": "string",
            "description": "Optional booking reference of the sales partner.",
            "nullable": true,
            "example": "123456789"
          },
          "BookingMessage": {
            "type": "string",
            "description": "Message of the customer to the property owner.",
            "nullable": true,
            "example": "early arrival request"
          },
          "Fulfillment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateResHeaderTypeFulfillment"
              }
            ],
            "description": "Sets the merchant of records; allowed values.",
            "example": "interhome"
          },
          "PassThroughTaxes": {
            "type": "boolean",
            "description": "Only allowed if granted by Interhome Group.\r\nUse this flag to indicate that local tourist taxes are handled on your end.",
            "example": false
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CreateResHeaderTypeFulfillment": {
        "enum": [
          "interhome",
          "partner",
          "shared"
        ],
        "type": "string",
        "description": "<p>Members:</p>\n<ul>\n<li><p>interhome</p>\n<p>Interhome Group is the merchant of record; invoice and voucher will be sent directly to traveler</p>\n</li>\n<li><p>partner</p>\n<p>Partner is fully responsible for fulfillment; invoice and voucher will be sent to partner</p>\n</li>\n<li><p>shared</p>\n<p>Shared fulfillment\nInvoice will be sent to partner and voucher will be released directly to traveler</p>\n</li>\n</ul>\n"
      },
      "CreateResServicesType": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Internal service code.",
            "nullable": true,
            "example": "PET"
          },
          "SubCode": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "Count": {
            "type": "integer",
            "description": "",
            "format": "int32",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CreateResServicesTypeItemArray": {
        "type": "object",
        "properties": {
          "AdditionalService": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateResServicesType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CreateReservationRq": {
        "required": [
          "BookingHeader",
          "Customers"
        ],
        "type": "object",
        "properties": {
          "BookingHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateResHeaderType"
              }
            ],
            "description": ""
          },
          "Customers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateReservationRqCustomers"
              }
            ],
            "description": ""
          },
          "AdditionalServices": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateResServicesTypeItemArray"
              }
            ],
            "description": "Services which can be booked during booking process.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "CreateReservationRq"
        }
      },
      "CreateReservationRqCustomers": {
        "required": [
          "Customer"
        ],
        "type": "object",
        "properties": {
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateResCustomerType"
              }
            ],
            "description": ""
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CreateReservationRs": {
        "type": "object",
        "properties": {
          "Success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateReservationRsSuccess"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "CreateReservationRs"
        }
      },
      "CreateReservationRsSuccess": {
        "type": "object",
        "properties": {
          "ReservationNumber": {
            "type": "string",
            "description": "",
            "nullable": true,
            "example": "202016123456"
          },
          "Price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceItemType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Alerts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlertTypeAlertItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "PrePaymentUrl": {
            "type": "string",
            "description": "URL to make the pre payment.",
            "nullable": true,
            "example": "https://payment-test.interhome.com/payform.htm?Reservation=202016123456&Currency=EUR&OrderDesc=202016123456&Method=CC&Language=DE&Source=IRent&Amount=35000"
          },
          "FullPaymentUrl": {
            "type": "string",
            "description": "URL to make the full payment.",
            "nullable": true,
            "example": "https://payment-test.interhome.com/payform.htm?Reservation=202016123456&Currency=EUR&OrderDesc=202016123456&Method=CC&Language=DE&Source=IRent&Amount=72400"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CurrenciesItemArray": {
        "type": "object",
        "properties": {
          "Currency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyEnum"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CurrencyEnum": {
        "enum": [
          "CHF",
          "CZK",
          "DKK",
          "EUR",
          "GBP",
          "NOK",
          "PLN",
          "SEK",
          "USD",
          "ZAR"
        ],
        "type": "string",
        "description": "<p>Special themes</p>\n<p>Members:</p>\n<ul>\n<li><p>CHF</p>\n<p>Swiss Francs</p>\n</li>\n<li><p>CZK</p>\n<p>Czech Koruna</p>\n</li>\n<li><p>DKK</p>\n<p>Danish Krone</p>\n</li>\n<li><p>EUR</p>\n<p>Euros</p>\n</li>\n<li><p>GBP</p>\n<p>British Pounds</p>\n</li>\n<li><p>NOK</p>\n<p>Norwegian Krone</p>\n</li>\n<li><p>PLN</p>\n<p>Polish Zloty</p>\n</li>\n<li><p>SEK</p>\n<p>Swedish Krona</p>\n</li>\n<li><p>USD</p>\n<p>USA Dollar</p>\n</li>\n<li><p>ZAR</p>\n<p>South African Rand</p>\n</li>\n</ul>\n"
      },
      "CustomerAddressType": {
        "type": "object",
        "properties": {
          "Salutation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/zititle_medi"
              }
            ],
            "description": "Title / Salutation of Client"
          },
          "Firstname": {
            "type": "string",
            "description": "Firstname of client",
            "nullable": true,
            "example": "John"
          },
          "Lastname": {
            "type": "string",
            "description": "Last name of client",
            "nullable": true,
            "example": "Doe"
          },
          "AddressLine1": {
            "type": "string",
            "description": "Additional Info to Address; can also be empty",
            "nullable": true,
            "example": "c/o Family Xy"
          },
          "AddressLine2": {
            "type": "string",
            "description": "Additional Info to Address; can also be empty",
            "nullable": true,
            "example": ""
          },
          "Street": {
            "type": "string",
            "description": "Street of client",
            "nullable": true,
            "example": "Sägereistrasse 20"
          },
          "Country": {
            "type": "string",
            "description": "Country of client",
            "nullable": true,
            "example": "CH"
          },
          "Zip": {
            "type": "string",
            "description": "zip code of client",
            "nullable": true,
            "example": "8152"
          },
          "Place": {
            "type": "string",
            "description": "Living Place of client",
            "nullable": true,
            "example": "Glattbrugg"
          },
          "State": {
            "type": "string",
            "description": "state of client; can also be empty",
            "nullable": true,
            "example": ""
          },
          "PhoneNumber": {
            "type": "string",
            "description": "phone number of client",
            "nullable": true,
            "example": "0041438109191"
          },
          "MobileNumber": {
            "type": "string",
            "description": "mobile phone number of client",
            "nullable": true,
            "example": "0041791234578"
          },
          "FaxNumber": {
            "type": "string",
            "description": "fax number of client",
            "nullable": true,
            "example": "0041438109195"
          },
          "EmailAddress": {
            "type": "string",
            "description": "email address of client",
            "nullable": true,
            "example": "john.doe@example.com"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CustomerRequest": {
        "type": "object",
        "properties": {
          "CustomerRequest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TitleWithTextTypeTitleWithTextsItemsArray"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "DescriptionType": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "House/Apartment description.\r\noutside = house/exterior description inside = apartment/interior description",
            "nullable": true,
            "example": "outside"
          },
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Language.",
            "example": "EN"
          },
          "Value": {
            "type": "string",
            "description": "Description in selected language.",
            "nullable": true,
            "example": "This is a wonderful house"
          },
          "ValidFrom": {
            "type": "string",
            "description": "Start of validity of the description",
            "format": "date",
            "nullable": true,
            "example": "2022-12-20"
          },
          "ValidTo": {
            "type": "string",
            "description": "End of validity of the description",
            "format": "date",
            "nullable": true,
            "example": "2023-10-10"
          }
        },
        "additionalProperties": false,
        "description": "Description."
      },
      "DescriptionTypeItemArray": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "DistanceType": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "Type of distance.\r\nPossible Values: distance, distance to airport",
            "nullable": true,
            "example": "distance"
          },
          "Name": {
            "type": "string",
            "description": "Following POI's are supported if distance type is \"distance\": center, golf, lake, public_transport, sea, beach, ski and can be found in DistanceTypeNamesEnum.\r\nIf distance type is \"distance to airport\" you will find the three letter code of an airport here.",
            "nullable": true,
            "example": "beach"
          },
          "Value": {
            "type": "string",
            "description": "Value in meters.",
            "nullable": true,
            "example": "300"
          },
          "Assignment": {
            "type": "string",
            "description": "Can be place or empty.",
            "nullable": true,
            "example": "place"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "DistanceTypeItemArray": {
        "type": "object",
        "properties": {
          "Distance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistanceType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "DistanceTypeNamesEnum": {
        "enum": [
          "center",
          "golf",
          "lake",
          "public_transport",
          "sea",
          "beach",
          "ski"
        ],
        "type": "string",
        "description": "<p>Valid names of V5ApiLibrary.Model.DistanceType.Name</p>\n<p>Members:</p>\n<ul>\n<li><p>center</p>\n</li>\n<li><p>golf</p>\n</li>\n<li><p>lake</p>\n</li>\n<li><p>public_transport</p>\n</li>\n<li><p>sea</p>\n</li>\n<li><p>beach</p>\n</li>\n<li><p>ski</p>\n</li>\n</ul>\n"
      },
      "ErrorType": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string",
            "description": "Error status.",
            "nullable": true,
            "example": "NOT_FOUND"
          },
          "Code": {
            "type": "integer",
            "description": "Error code.",
            "format": "int32",
            "example": 34
          },
          "Message": {
            "type": "string",
            "description": "Human readable error message.",
            "nullable": true,
            "example": "Nothing found for the AccommodationCode 'ES9410.845.1'"
          }
        },
        "additionalProperties": false,
        "description": "Standard error response item."
      },
      "EvaluationType": {
        "type": "object",
        "properties": {
          "Stars": {
            "type": "string",
            "description": "Overall quality / star rating of the property\r\nMore info about this topic can be found in our Partner Wiki",
            "nullable": true,
            "example": "4"
          },
          "Location": {
            "type": "string",
            "description": "Rating (1-5) of the location.",
            "nullable": true,
            "example": "4"
          },
          "OutdoorArea": {
            "type": "string",
            "description": "Rating (1-5) of the outdoor area.",
            "nullable": true,
            "example": "3"
          },
          "Interior": {
            "type": "string",
            "description": "Rating (1-5) of the interior.",
            "nullable": true,
            "example": "2"
          },
          "Tranquility": {
            "type": "string",
            "description": "Rating (1-5) of the tranquility.",
            "nullable": true,
            "example": "3"
          },
          "Kitchen": {
            "type": "string",
            "description": "Rating (1-5) of the kitchen.",
            "nullable": true,
            "example": "4"
          },
          "AccessRoad": {
            "type": "string",
            "description": "Rating (1-5) of the access road.",
            "nullable": true,
            "example": "2"
          }
        },
        "additionalProperties": false,
        "description": "Star rating of the property"
      },
      "ExchangeRateItem": {
        "type": "object",
        "properties": {
          "ToCurrency": {
            "type": "string",
            "description": "Currency",
            "nullable": true,
            "example": "USD"
          },
          "StartDate": {
            "type": "string",
            "description": "Date from which this exchange rate is valid",
            "format": "date",
            "example": "2022-03-19"
          },
          "ExchangeRate": {
            "type": "number",
            "description": "Value to be applied",
            "format": "double",
            "example": 1.578
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ExchangeRatesRs": {
        "type": "object",
        "properties": {
          "ExchangeRate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeRateItem"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Exchange rates response",
        "xml": {
          "name": "ExchangeRatesRs"
        }
      },
      "GeoCoordinatesType": {
        "type": "object",
        "properties": {
          "Longitude": {
            "type": "number",
            "description": "Geo coordinates, longitude.",
            "format": "double",
            "example": 7.0655823
          },
          "Latitude": {
            "type": "number",
            "description": "Geo coordinates, latitude.",
            "format": "double",
            "example": 26.291424
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "GetReservationsResponse": {
        "type": "object",
        "properties": {
          "Reservations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationsType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "GetVoucherRs": {
        "type": "object",
        "properties": {
          "VoucherDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoucherDetailType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "GetVoucherRs"
        }
      },
      "ImportantInfo": {
        "type": "object",
        "properties": {
          "YoungGroups": {
            "type": "string",
            "description": "",
            "nullable": true,
            "example": ""
          },
          "DepositPayment": {
            "type": "string",
            "description": "Information about deposit.",
            "nullable": true,
            "example": ""
          },
          "AdditionalInformationCode": {
            "type": "string",
            "description": "Brand.",
            "nullable": true,
            "example": "I"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "IndividualTexts": {
        "type": "object",
        "properties": {
          "IndividualText": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TitleWithTextTypeTitleWithTextsItemsArray"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ItemType": {
        "type": "object",
        "properties": {
          "AccommodationCode": {
            "type": "string",
            "description": "Selected accommodation code.",
            "nullable": true,
            "example": "AT4845.602.1"
          },
          "CheckIn": {
            "type": "string",
            "description": "",
            "format": "date",
            "example": "2021-04-17"
          },
          "CheckOut": {
            "type": "string",
            "description": "",
            "format": "date",
            "example": "2021-04-24"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ItemTypeItemArray": {
        "type": "object",
        "properties": {
          "Item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "KeyCollection": {
        "type": "object",
        "properties": {
          "KeyholderInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressTypeAddressItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "KeySaveInformation": {
            "type": "string",
            "description": "Information to the keysafe.",
            "nullable": true,
            "example": "any text"
          },
          "Direction": {
            "type": "string",
            "description": "Direction to get the keys.",
            "nullable": true,
            "example": "any text"
          },
          "ThirdPartyRef": {
            "type": "string",
            "description": "Third party ref.",
            "nullable": true,
            "example": "123695547256"
          },
          "KeySaveCode": {
            "type": "string",
            "description": "Keysafe code if any.",
            "nullable": true,
            "example": "0000"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "LanguagesEnum": {
        "enum": [
          "cs",
          "da",
          "de",
          "en",
          "es",
          "fi",
          "fr",
          "hr",
          "hu",
          "it",
          "nl",
          "no",
          "pl",
          "pt",
          "ru",
          "sv"
        ],
        "type": "string",
        "description": "<p>Members:</p>\n<ul>\n<li><p>cs</p>\n<p>Czech</p>\n</li>\n<li><p>da</p>\n<p>Danish</p>\n</li>\n<li><p>de</p>\n<p>German</p>\n</li>\n<li><p>en</p>\n<p>English</p>\n</li>\n<li><p>es</p>\n<p>Spanish</p>\n</li>\n<li><p>fi</p>\n<p>Finnish</p>\n</li>\n<li><p>fr</p>\n<p>French</p>\n</li>\n<li><p>hr</p>\n<p>Croatian</p>\n</li>\n<li><p>hu</p>\n<p>Hungarian</p>\n</li>\n<li><p>it</p>\n<p>Italian</p>\n</li>\n<li><p>nl</p>\n<p>Dutch</p>\n</li>\n<li><p>no</p>\n<p>Norwegian</p>\n</li>\n<li><p>pl</p>\n<p>Polish</p>\n</li>\n<li><p>pt</p>\n<p>Portuguese</p>\n</li>\n<li><p>ru</p>\n<p>Russian</p>\n</li>\n<li><p>sv</p>\n<p>Swedish</p>\n</li>\n</ul>\n"
      },
      "LanguagesItemArray": {
        "type": "object",
        "properties": {
          "Language": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguagesEnum"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "LastModifiedType": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "Part of the accommodation that was changed at 'LastModified'.\r\n(see LastModifiedTypeEnum for details)",
            "nullable": true,
            "example": "VACANCY"
          },
          "LastModified": {
            "type": "string",
            "description": "Timestamp of last modification.",
            "format": "date-time",
            "example": "2022-02-04T08:07:25"
          }
        },
        "additionalProperties": false,
        "description": "Detail information on which part was changed when."
      },
      "LastModifiedTypeEnum": {
        "enum": [
          "ATTRIBUTE",
          "DESCRIPTION",
          "MEDIA",
          "ACCOMMODATION",
          "OBJSTATUS",
          "PREPRICES",
          "PRICES",
          "VACANCY",
          "WWWCAP"
        ],
        "type": "string",
        "description": "<p>Members:</p>\n<ul>\n<li><p>ATTRIBUTE</p>\n<p>Indicating that the available attributes of the accommodation have changed.</p>\n</li>\n<li><p>DESCRIPTION</p>\n<p>Indicating that the description has been newly generated as parts of it has been changed.</p>\n</li>\n<li><p>MEDIA</p>\n<p>Indicating that the pictures of the accommodation has changed. Can also be that new pictures have been added.</p>\n</li>\n<li><p>ACCOMMODATION</p>\n<p>Indicating that the accommodation information of the accommodation has changed. May be description, media, object status, prices, vacancy or wwwcap.</p>\n</li>\n<li><p>OBJSTATUS</p>\n<p>Indicating the internal status of the accommodation has changed.</p>\n</li>\n<li><p>PREPRICES</p>\n<p>Internally used</p>\n</li>\n<li><p>PRICES</p>\n<p>Indicating that price relevant data of the accommodation has changed. Can include for example season Model, pax split, price period any kind of other price relevant data.</p>\n</li>\n<li><p>VACANCY</p>\n<p>Indicating that availabilities or any kind of vacancy relevant date (e.g. Booking rules, quota, pax split...) of the accommodation has changed.</p>\n</li>\n<li><p>WWWCAP</p>\n<p>Indicating that there was a channge of the wwwcap-flag (ready to sell in web).</p>\n</li>\n</ul>\n"
      },
      "LastModifiedTypesArrayItems": {
        "type": "object",
        "properties": {
          "LastModifiedType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LastModifiedType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "MediaItemType": {
        "type": "object",
        "properties": {
          "Main": {
            "type": "boolean",
            "description": "True if photo is the main / preview picture of an accommodation.",
            "example": true
          },
          "Season": {
            "type": "string",
            "description": "Season the image shows.\r\ns: summer w: winter.",
            "example": "s"
          },
          "Uri": {
            "type": "string",
            "description": "Uri of the photo.",
            "nullable": true,
            "example": "https://images.interhome.com/partner-medium/DE2981.100.3/37491-1-227399-1408709181"
          },
          "FileName": {
            "type": "string",
            "description": "Name of the file.",
            "nullable": true,
            "example": "40F2E989250A1ED89ED91CDBD4D12E18"
          },
          "Format": {
            "type": "string",
            "description": "Allowed values: - image (photo, mostly JPG).",
            "nullable": true,
            "example": "image"
          },
          "Type": {
            "type": "string",
            "description": "View type of the photo.\r\nInside: photo of the interior .\r\nOutside: view of property from exterior/surroundings.\r\nPlace: pictures of local area where object is located. IMPORTANT: these pictures do not show the view from the house or the immediate surroundings but more the local area.\r\nNote: 3rd party properties might have only type inside even though it might have an exterior view.",
            "nullable": true,
            "example": "inside"
          },
          "Caption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaItemTypeCaption"
            },
            "description": "Describing text.",
            "nullable": true
          },
          "LastModified": {
            "type": "string",
            "description": "Date when the media was last modified.",
            "format": "date-time",
            "example": "2016-12-09T15:01:55"
          },
          "SortOrder": {
            "type": "integer",
            "description": "Order of sorting (e.g., for images, sorting is individual per each image type).",
            "format": "int32",
            "example": 1
          },
          "SortOrderW": {
            "type": "integer",
            "description": "Sort order for Winter.",
            "format": "int32",
            "nullable": true,
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "See accommodation/media for details."
      },
      "MediaItemTypeCaption": {
        "type": "object",
        "properties": {
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Language of the description",
            "xml": {
              "attribute": true
            },
            "example": "De"
          },
          "Content": {
            "type": "string",
            "description": "Description",
            "nullable": true,
            "example": "This is our kitchen"
          }
        },
        "additionalProperties": false,
        "description": "Caption text"
      },
      "MediaItemTypeItemArray": {
        "type": "object",
        "properties": {
          "MediaItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaItemType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "MediaItemsType": {
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer",
            "description": "Shows the number of pictures of the selected accommodation.",
            "format": "int32",
            "example": 22
          },
          "CurrentPage": {
            "type": "integer",
            "description": "Shows the current page number",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "NumberOfPages": {
            "type": "integer",
            "description": "Shows the amount of pages",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "MediaItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaItemType"
            },
            "description": "Pictures of the selected accommodation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "NextCheckInDateRs": {
        "type": "object",
        "properties": {
          "NextCheckInDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VacancyDayType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "NextCheckInDateRs"
        }
      },
      "OptionConditionType": {
        "type": "object",
        "properties": {
          "DaysBeforeArrivalFrom": {
            "type": "integer",
            "description": "Days from when an option is possible to make before arrival.",
            "format": "int32",
            "example": 100
          },
          "DaysBeforeArrivalTo": {
            "type": "integer",
            "description": "Days until when an option is possible to make before arrival.",
            "format": "int32"
          },
          "ExpiryDays": {
            "type": "integer",
            "description": "Days in which the option will expire.",
            "format": "int32",
            "example": 2
          },
          "ExpiryTime": {
            "type": "string",
            "description": "",
            "format": "time",
            "example": ""
          },
          "ExpiryReservationStateCode": {
            "type": "string",
            "description": "Can be one of ReservationStatusCodeEnum\r\n- CA\r\n- CR\r\n- ER\r\n- OK\r\n- OP\r\n- OS\r\n- RQ\r\n- WW\r\n- XX",
            "nullable": true,
            "example": "OK"
          },
          "ExpiryReservationState": {
            "type": "string",
            "description": "State of the option",
            "nullable": true,
            "example": "Booking definitive and confirmed"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "OrderByEnum": {
        "enum": [
          "interhome",
          "lastbookday",
          "age",
          "averagerating",
          "price",
          "pax"
        ],
        "type": "string",
        "description": "<p>Sorting options</p>\n<p>Members:</p>\n<ul>\n<li><p>interhome</p>\n<p>default sorting</p>\n</li>\n<li><p>lastbookday</p>\n<p>sort by number of bookings</p>\n</li>\n<li><p>age</p>\n<p>sort by age of contract</p>\n</li>\n<li><p>averagerating</p>\n<p>sort by customer rating</p>\n</li>\n<li><p>price</p>\n<p>sort by price</p>\n</li>\n<li><p>pax</p>\n<p>number of persons</p>\n</li>\n</ul>\n"
      },
      "PaxByValidityItemTypeArray": {
        "type": "object",
        "properties": {
          "Item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ByValidityItemType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PaymentFormType": {
        "type": "object",
        "properties": {
          "Mode": {
            "type": "string",
            "description": "Possible payment type.",
            "nullable": true,
            "example": "CC"
          },
          "Type": {
            "type": "string",
            "description": "Detail type.",
            "nullable": true,
            "example": "MAST"
          },
          "DaysBefore": {
            "type": "integer",
            "description": "Nr of days before arrival until the payment can be done with the mentioned payment type.",
            "format": "int32",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PaymentMethodsEnum": {
        "enum": [
          "CC",
          "ECV",
          "ELV",
          "ID",
          "PP"
        ],
        "type": "string",
        "description": "<p>Supported payment methods</p>\n<p>Members:</p>\n<ul>\n<li><p>CC</p>\n<p>Credit Card</p>\n</li>\n<li><p>ECV</p>\n<p>Cheque Vacances(not yet available, roll out tba)</p>\n</li>\n<li><p>ELV</p>\n<p>Electronic debit</p>\n</li>\n<li><p>ID</p>\n<p>Ideal</p>\n</li>\n<li><p>PP</p>\n<p>Paypal</p>\n</li>\n</ul>\n"
      },
      "PaymentTypeReservationType": {
        "enum": [
          "Electronic",
          "Invoice"
        ],
        "type": "string",
        "description": "<p>Members:</p>\n<ul>\n<li><p>Electronic</p>\n</li>\n<li><p>Invoice</p>\n</li>\n</ul>\n"
      },
      "PaymentTypeType": {
        "enum": [
          "CreditCard",
          "Invoice",
          "CC",
          "CHK",
          "ECV",
          "ELV",
          "ID",
          "INV",
          "PP"
        ],
        "type": "string",
        "description": "<p>Members:</p>\n<ul>\n<li><p>CreditCard</p>\n<p>CreditCard</p>\n</li>\n<li><p>Invoice</p>\n<p>Invoice</p>\n</li>\n<li><p>CC</p>\n<p>CC</p>\n</li>\n<li><p>CHK</p>\n<p>CHK</p>\n</li>\n<li><p>ECV</p>\n<p>ECV</p>\n</li>\n<li><p>ELV</p>\n<p>ELV</p>\n</li>\n<li><p>ID</p>\n<p>ID</p>\n</li>\n<li><p>INV</p>\n<p>INV</p>\n</li>\n<li><p>PP</p>\n<p>PayPal</p>\n</li>\n</ul>\n"
      },
      "PhotoResolutionEnum": {
        "enum": [
          "small",
          "medium",
          "large",
          "xlarge"
        ],
        "type": "string",
        "description": "<p>Photo resolution enumeration</p>\n<p>Members:</p>\n<ul>\n<li><p>small</p>\n<p>Small 215×164</p>\n</li>\n<li><p>medium</p>\n<p>Medium 755 x 566</p>\n</li>\n<li><p>large</p>\n<p>Large 1024 x 768</p>\n</li>\n<li><p>xlarge</p>\n<p>XLarge 2048 x 1536</p>\n</li>\n</ul>\n"
      },
      "PlaceType": {
        "type": "object",
        "properties": {
          "PlaceCode": {
            "type": "string",
            "description": "Interhome Group internal place code.",
            "nullable": true,
            "example": "3920"
          },
          "MainPlaceCode": {
            "type": "string",
            "description": "Interhome Group internal main place.",
            "nullable": true,
            "example": "3900"
          },
          "PlaceName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaceTypePlaceName"
            },
            "description": "",
            "nullable": true
          },
          "GeoCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeoCoordinatesType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PlaceTypePlaceName": {
        "type": "object",
        "properties": {
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Language of text elements. Default is english.",
            "xml": {
              "attribute": true
            },
            "example": "EN"
          },
          "Value": {
            "type": "string",
            "description": "Name of the place.",
            "nullable": true,
            "example": "Zermatt"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PriceItemType": {
        "type": "object",
        "properties": {
          "RegularRentalPrice": {
            "type": "number",
            "description": "Regular price without any special offer deduction (excl. services on spot).",
            "format": "double",
            "nullable": true,
            "example": 774
          },
          "RentalPrice": {
            "type": "number",
            "description": "Rental price to be paid, special offer discounts applied.",
            "format": "double",
            "nullable": true,
            "example": 724
          },
          "CustomerPrice": {
            "type": "number",
            "description": "Regular price to be paid (incl. selected services), special offers not yet deducted.",
            "format": "double",
            "nullable": true,
            "example": 774
          },
          "CustomerTotalPrice": {
            "type": "number",
            "description": "Final price of the customer.",
            "format": "double",
            "nullable": true,
            "example": 724
          },
          "RetailerPrice": {
            "type": "number",
            "description": "Customer total price exclusive of commission.",
            "format": "double",
            "nullable": true,
            "example": 650
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": "Currency the booking will be made in.",
            "example": "CHF"
          },
          "AmountPrepayment": {
            "type": "number",
            "description": "Amount of the first payment.",
            "format": "double",
            "nullable": true,
            "example": 200
          },
          "DueDatePrepayment": {
            "type": "string",
            "description": "",
            "format": "date",
            "nullable": true,
            "example": "2021-04-15"
          },
          "DueDateFinalpayment": {
            "type": "string",
            "description": "",
            "format": "date",
            "nullable": true,
            "example": "2021-05-20"
          },
          "RangeFromDate": {
            "type": "string",
            "description": "",
            "format": "date",
            "nullable": true,
            "example": "2021-05-04"
          },
          "RangeToDate": {
            "type": "string",
            "description": "",
            "format": "date",
            "nullable": true,
            "example": "2021-06-15"
          },
          "SpecialCode": {
            "type": "string",
            "description": "Special offer code.",
            "nullable": true,
            "example": "LM/00000001"
          },
          "SpecialDescription": {
            "type": "string",
            "description": "Description of the special offer code.",
            "nullable": true,
            "example": "Last minute"
          },
          "SpecialPriceReduction": {
            "type": "number",
            "description": "Price Reduction.",
            "format": "double",
            "nullable": true,
            "example": 53
          },
          "CommissionAmount": {
            "type": "number",
            "description": "Amount of the commission.",
            "format": "double",
            "nullable": true,
            "example": 73
          },
          "PaymentsReceived": {
            "type": "number",
            "description": "Value of already received payments.",
            "format": "double",
            "nullable": true,
            "example": 423
          },
          "AmountFinalPayment": {
            "type": "number",
            "description": "Value of final payment.",
            "format": "double",
            "nullable": true,
            "example": 123
          },
          "EncashmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceItemTypeEncashmentType"
              }
            ],
            "description": "Merchant of record.",
            "nullable": true,
            "example": "retailer"
          },
          "PaxUpTo": {
            "type": "integer",
            "description": "Pax up to the price is valid.",
            "format": "int32",
            "nullable": true,
            "example": 4
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PriceItemTypeEncashmentType": {
        "enum": [
          "customer",
          "retailer"
        ],
        "type": "string",
        "description": "<p>Members:</p>\n<ul>\n<li><p>customer</p>\n<p>customer</p>\n</li>\n<li><p>retailer</p>\n<p>retailer</p>\n</li>\n</ul>\n"
      },
      "PriceListAllDurType": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": ""
          },
          "Prices": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceListAllDurTypePriceItemArray"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PriceListAllDurTypePrice": {
        "type": "object",
        "properties": {
          "CheckInDate": {
            "type": "string",
            "description": "Check-in date",
            "format": "date",
            "xml": {
              "attribute": true
            },
            "example": "2022-06-07"
          },
          "Price": {
            "type": "number",
            "description": "Price for customer (incl. resp. already deducted any special offers).",
            "format": "double",
            "xml": {
              "attribute": true
            },
            "example": 980.45
          },
          "Duration": {
            "type": "integer",
            "description": "Duration of stay (in days).",
            "format": "int32",
            "xml": {
              "attribute": true
            },
            "example": 7
          },
          "PaxUpTo": {
            "type": "integer",
            "description": "The price is valid up to this number of pax in teh accommodation.",
            "format": "int32",
            "xml": {
              "attribute": true
            },
            "example": 4
          },
          "RegularPrice": {
            "type": "number",
            "description": "Regular price without any special offer",
            "format": "double",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": 1050.5
          },
          "SpecialCode": {
            "type": "string",
            "description": "Internal Interhome Group code for special offer.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "LM/1"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PriceListAllDurTypePriceItemArray": {
        "type": "object",
        "properties": {
          "Price": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceListAllDurTypePrice"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PriceListType": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Unique ID of an Interhome Group accommodation.",
            "nullable": true,
            "example": "CH3920.4.1"
          },
          "Duration": {
            "type": "number",
            "description": "Duration of stay (in days)",
            "format": "double",
            "example": 7
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": "Chosen currency.",
            "example": "EUR"
          },
          "Prices": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceTypeItemArray"
              }
            ],
            "description": "Prices for the chosen accommodation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PriceRulesEnum": {
        "enum": [
          "PD",
          "PW",
          "PU",
          "UD",
          "UW",
          "P1",
          "U1",
          "UH",
          "K1",
          "M1",
          "X1",
          "NO",
          "LX"
        ],
        "type": "string",
        "description": "<p>2.4.1 PRICE RULES\nServices are always connected to price rules which explain, for which period, service costs can be expected.</p>\n<p>Members:</p>\n<ul>\n<li><p>PD</p>\n<p>Per person</p>\n</li>\n<li><p>PW</p>\n<p>Per person per week</p>\n</li>\n<li><p>PU</p>\n<p>Per person per unit</p>\n</li>\n<li><p>UD</p>\n<p>Per unit per day</p>\n</li>\n<li><p>UW</p>\n<p>Per unit per week</p>\n</li>\n<li><p>P1</p>\n<p>Once per person</p>\n</li>\n<li><p>U1</p>\n<p>Once per unit</p>\n</li>\n<li><p>UH</p>\n<p>Per Hour</p>\n</li>\n<li><p>K1</p>\n<p>Per kwh</p>\n</li>\n<li><p>M1</p>\n<p>Per cmb</p>\n</li>\n<li><p>X1</p>\n<p>According to use</p>\n</li>\n<li><p>NO</p>\n<p>No calculated basis</p>\n</li>\n<li><p>LX</p>\n<p>Per liter</p>\n</li>\n</ul>\n"
      },
      "PriceType": {
        "type": "object",
        "properties": {
          "CheckInRangeFrom": {
            "type": "string",
            "description": "",
            "format": "date",
            "example": "2022-09-01"
          },
          "CheckInRangeTo": {
            "type": "string",
            "description": "",
            "format": "date",
            "example": "2022-09-08"
          },
          "Price": {
            "type": "number",
            "description": "Price for customer.",
            "format": "double",
            "example": 380
          },
          "RegularPrice": {
            "type": "number",
            "description": "Price whithout any special offer deducted (excl. services)",
            "format": "double",
            "nullable": true,
            "example": 443
          },
          "SpecialCode": {
            "type": "string",
            "description": "Special offer code.",
            "nullable": true,
            "example": "LM/00000001"
          },
          "SpecialDescription": {
            "type": "string",
            "description": "Special offer description.",
            "nullable": true,
            "example": "Special Offer (7:6)"
          },
          "SpecialPriceReduction": {
            "type": "number",
            "description": "Amount of the price reduction of the special offer.",
            "format": "double",
            "nullable": true,
            "example": -53
          },
          "PaxUpTo": {
            "type": "integer",
            "description": "Max occupancy price is valid to.",
            "format": "int32",
            "nullable": true,
            "example": 4
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PriceTypeItemArray": {
        "type": "object",
        "properties": {
          "Price": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PricesRq": {
        "type": "object",
        "properties": {
          "SalesOffice": {
            "type": "string",
            "description": "Sales office to be used for the partner.",
            "nullable": true,
            "example": "2048"
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": "Currency corresponding to Sales office.",
            "example": "EUR"
          },
          "Calculate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ItemTypeItemArray"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "PriceRq"
        }
      },
      "PricesRs": {
        "type": "object",
        "properties": {
          "PriceItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricesRsPriceItem"
            },
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "PriceRs"
        }
      },
      "PricesRsPriceItem": {
        "type": "object",
        "properties": {
          "AccommodationCode": {
            "type": "string",
            "description": "Unique ID of an Interhome Group accommodation.",
            "nullable": true,
            "example": "AT4845.602.1"
          },
          "CheckIn": {
            "type": "string",
            "description": "Requested CheckIn Date",
            "format": "date",
            "example": "2021-04-17"
          },
          "CheckOut": {
            "type": "string",
            "description": "Requested CheckOut Date",
            "format": "date",
            "example": "2021-04-24"
          },
          "Price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceItemType"
              }
            ],
            "description": "//TODO: re-used type - too many properties???",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PropertyType": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchPropertiesEnum"
              }
            ],
            "description": "Property name (search post parameter).",
            "example": "pax"
          },
          "Value": {
            "type": "string",
            "description": "Value is only needed for numeric fields. If a range is necessary, please use value accordingly.\r\ne.g.\r\n<Name>pax</Name>\r\n<Value>2-99</Value>",
            "nullable": true,
            "example": "2-99"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "PropertyTypeItemArray": {
        "type": "object",
        "properties": {
          "Property": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReadReservationResponse": {
        "type": "object",
        "properties": {
          "AdditionalServices": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddServicesType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerAddressType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceItemType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Reservation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "RegionType": {
        "type": "object",
        "properties": {
          "RegionCode": {
            "type": "string",
            "description": "Internal region code for the property.",
            "nullable": true,
            "example": "30"
          },
          "MainRegionCode": {
            "type": "string",
            "description": "Internal main region code for the property.",
            "nullable": true,
            "example": "33"
          },
          "RegionName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionTypeRegionName"
            },
            "description": "Name of touristic region.",
            "nullable": true
          },
          "GeoCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeoCoordinatesType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Places": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaceType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "RegionTypeItemType": {
        "type": "object",
        "properties": {
          "Region": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "RegionTypeRegionName": {
        "type": "object",
        "properties": {
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Language of the test elements. Default is english.",
            "xml": {
              "attribute": true
            },
            "example": "DE"
          },
          "Value": {
            "type": "string",
            "description": "Name of Region in chosen language.",
            "nullable": true,
            "example": "Wallis"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationInformation": {
        "type": "object",
        "properties": {
          "Arrivals": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationInformationArrivals"
              }
            ],
            "description": "",
            "nullable": true
          },
          "NumberOfNights": {
            "type": "string",
            "description": "Number of booked nights.",
            "nullable": true,
            "example": "007"
          },
          "PersonCount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationInformationPersonCount"
              }
            ],
            "description": "",
            "nullable": true
          },
          "ArrivalInformation": {
            "type": "string",
            "description": "Additional arrival information.",
            "nullable": true,
            "example": "any text"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationInformationArrivals": {
        "type": "object",
        "properties": {
          "CheckIns": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationInformationArrivalsCheckIns"
              }
            ],
            "description": "",
            "nullable": true
          },
          "CheckOuts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationInformationArrivalsCheckOuts"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationInformationArrivalsCheckIns": {
        "type": "object",
        "properties": {
          "CheckIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationInformationArrivalsCheckInsCheckIn"
            },
            "description": "",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "description": "",
            "format": "date",
            "xml": {
              "attribute": true
            },
            "example": "2020-12-19"
          },
          "OnAppointment": {
            "type": "boolean",
            "description": "Indicates if the check-in is on appointments.",
            "xml": {
              "attribute": true
            },
            "example": false
          },
          "TwentyForSeven": {
            "type": "boolean",
            "description": "Indicates, if the check-in is possible 24/7.",
            "xml": {
              "attribute": true
            },
            "example": false
          },
          "Description": {
            "type": "string",
            "description": "Information about Check-in.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Some text"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationInformationArrivalsCheckInsCheckIn": {
        "type": "object",
        "properties": {
          "TimeFrom": {
            "type": "string",
            "description": "",
            "format": "time",
            "xml": {
              "attribute": true
            },
            "example": "10:00:00"
          },
          "TimeTo": {
            "type": "string",
            "description": "",
            "format": "time",
            "xml": {
              "attribute": true
            },
            "example": "13:00:00"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationInformationArrivalsCheckOuts": {
        "type": "object",
        "properties": {
          "CheckOut": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationInformationArrivalsCheckOutsCheckOut"
            },
            "description": "",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "description": "",
            "format": "date",
            "xml": {
              "attribute": true
            },
            "example": "2020-05-16"
          },
          "OnAppointment": {
            "type": "boolean",
            "description": "Time, when check-out windwo ends.",
            "xml": {
              "attribute": true
            },
            "example": false
          },
          "TwentyForSeven": {
            "type": "boolean",
            "description": "indicates, if check-out is possible 24/7.",
            "xml": {
              "attribute": true
            },
            "example": false
          },
          "Description": {
            "type": "string",
            "description": "Information about check-out.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Some text"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationInformationArrivalsCheckOutsCheckOut": {
        "type": "object",
        "properties": {
          "TimeFrom": {
            "type": "string",
            "description": "",
            "format": "time",
            "xml": {
              "attribute": true
            },
            "example": "08:00:00"
          },
          "TimeTo": {
            "type": "string",
            "description": "",
            "format": "time",
            "xml": {
              "attribute": true
            },
            "example": "10:00:00"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationInformationPersonCount": {
        "type": "object",
        "properties": {
          "NoOfAdults": {
            "type": "string",
            "description": "number of adults (13+ years)",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "2"
          },
          "NoOfChild": {
            "type": "string",
            "description": "number of children (3-12 years)",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "0"
          },
          "NoOfBaby": {
            "type": "string",
            "description": "number of babies (0-2 years)",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "0"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationItemType": {
        "type": "object",
        "properties": {
          "ReservationNumber": {
            "type": "string",
            "description": "Selected reservation.",
            "nullable": true,
            "example": "050521108631"
          },
          "ReservationState": {
            "type": "string",
            "description": "Status of the selected reservation.",
            "nullable": true,
            "example": "booking definitive and confirmed"
          },
          "ReservationStateCode": {
            "type": "string",
            "description": "Status code of the selected reservation.",
            "nullable": true,
            "example": "OK"
          },
          "SalesOffice": {
            "type": "string",
            "description": "Interhome sales office code.",
            "nullable": true,
            "example": "0505"
          },
          "AccommodationCode": {
            "type": "string",
            "description": "Booked accommodation.",
            "nullable": true,
            "example": "ES9725.600.1"
          },
          "Adults": {
            "type": "integer",
            "description": "Booked nr of adults.",
            "format": "int32",
            "example": 2
          },
          "Children": {
            "type": "integer",
            "description": "Booked nr of children.",
            "format": "int32",
            "example": 0
          },
          "Babies": {
            "type": "integer",
            "description": "Booked nr of babies.",
            "format": "int32",
            "example": 1
          },
          "ArrivalDate": {
            "type": "string",
            "description": "Arrival date of the booking.",
            "format": "date-time",
            "example": "2021-09-04"
          },
          "DepartureDate": {
            "type": "string",
            "description": "",
            "format": "date",
            "example": "2021-09-11"
          },
          "Duration": {
            "type": "number",
            "description": "Duration of stay in days.",
            "format": "double",
            "example": 7
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": "Currency used for the booking.",
            "example": "EUR"
          },
          "Price": {
            "type": "number",
            "description": "Total price of reservation.",
            "format": "double",
            "example": 1050
          },
          "CommissionAmount": {
            "type": "number",
            "description": "Amount of commission you receive for the booking",
            "format": "double",
            "nullable": true,
            "example": 100
          },
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Booking language (documents).",
            "example": "ES"
          },
          "PartnerID": {
            "type": "string",
            "description": "Your partner ID.",
            "nullable": true,
            "example": "ES123456"
          },
          "PartnerIDExtra": {
            "type": "string",
            "description": "Your additional/internal ID.",
            "nullable": true,
            "example": "999"
          },
          "PartnerContact": {
            "type": "string",
            "description": "Your internal contact.",
            "nullable": true,
            "example": "john doe"
          },
          "IsOption": {
            "type": "boolean",
            "description": "Standard value \"false\". There is the possibility of (short) options with special admission (IsOption = true)",
            "example": false
          },
          "OptionDate": {
            "type": "string",
            "description": "Date and time until when your (short) option is valid to.",
            "format": "date-time",
            "nullable": true,
            "example": "2021-11-19T15:00:0"
          },
          "PaymentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentTypeType"
              }
            ],
            "description": "Shows the chosen payment type.",
            "nullable": true,
            "example": "invoice"
          },
          "Channel": {
            "type": "string",
            "description": "Interhome group internal channel, can be ignored by the partner.",
            "nullable": true,
            "example": "WWWR"
          },
          "ExternalReference": {
            "type": "string",
            "description": "Your reference.",
            "nullable": true,
            "example": "365924"
          },
          "Message": {
            "type": "string",
            "description": "",
            "nullable": true,
            "example": ""
          },
          "PropertyType": {
            "type": "string",
            "description": "",
            "nullable": true,
            "example": ""
          },
          "PromoCode": {
            "type": "string",
            "description": "",
            "nullable": true,
            "example": ""
          },
          "InsertDate": {
            "type": "string",
            "description": "Date and time when the booking was created resp. inserted in the interhome system.",
            "format": "date-time",
            "example": "2021-08-27T10:14:14"
          },
          "UpdateDate": {
            "type": "string",
            "description": "Date and time when the booking was last time updated in teh interhome system.",
            "format": "date-time",
            "nullable": true,
            "example": "2021-09-15T10:18:29"
          },
          "Traveler": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationItemTypeTraveler"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationItemTypeTraveler": {
        "type": "object",
        "properties": {
          "Firstname": {
            "type": "string",
            "description": "Firstname.",
            "nullable": true,
            "example": "John"
          },
          "Lastname": {
            "type": "string",
            "description": "Lastname.",
            "nullable": true,
            "example": "Doe"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationSourceEnum": {
        "enum": [
          "iRent",
          "IC"
        ],
        "type": "string",
        "description": "<p>Supported payment methods</p>\n<p>Members:</p>\n<ul>\n<li><p>iRent</p>\n<p>iRent,</p>\n</li>\n<li><p>IC</p>\n<p>InterChalet</p>\n</li>\n</ul>\n"
      },
      "ReservationStatusCodeEnum": {
        "enum": [
          "OK",
          "OP",
          "OS",
          "RQ",
          "XX",
          "CA",
          "CR",
          "ER",
          "WW"
        ],
        "type": "string",
        "description": "<p>Reservation states</p>\n<p>Members:</p>\n<ul>\n<li><p>OK</p>\n<p>Reservation is confirmed</p>\n</li>\n<li><p>OP</p>\n<p>Option booking (expires at given time, ~4 days)</p>\n</li>\n<li><p>OS</p>\n<p>Short Option booking (expires at given time, ~&lt; 2 hours)</p>\n</li>\n<li><p>RQ</p>\n<p>On-request booking, pending confirmation</p>\n</li>\n<li><p>XX</p>\n<p>Reservation cancelled without fees</p>\n</li>\n<li><p>CA</p>\n<p>Reservation cancelled; fees may apply</p>\n</li>\n<li><p>CR</p>\n<p>Booking is just being created (e.g. by agent)</p>\n</li>\n<li><p>ER</p>\n<p>Booking not complete</p>\n</li>\n<li><p>WW</p>\n<p>Pending Internet booking</p>\n</li>\n</ul>\n"
      },
      "ReservationType": {
        "type": "object",
        "properties": {
          "ReservationNumber": {
            "type": "string",
            "description": "Interhome Reservation Number",
            "nullable": true,
            "example": "204812345678"
          },
          "ReservationState": {
            "type": "string",
            "description": "Status of selected reservation",
            "nullable": true,
            "example": "booking definitive and confirmed"
          },
          "ReservationStateCode": {
            "type": "string",
            "description": "Status code of selected reservation",
            "nullable": true,
            "example": "OK"
          },
          "ReservationConnected": {
            "type": "string",
            "description": "Reservation number of the connected reservation if any",
            "nullable": true,
            "example": "204887654321"
          },
          "SalesOffice": {
            "type": "string",
            "description": "Interhome Sales office",
            "nullable": true,
            "example": "2048"
          },
          "AccommodationCode": {
            "type": "string",
            "description": "Booked accommodation",
            "nullable": true,
            "example": "CH3920.4.1"
          },
          "Adults": {
            "type": "string",
            "description": "Booked nr of adults (18+ years)",
            "nullable": true,
            "example": "2"
          },
          "Children": {
            "type": "string",
            "description": "booked nr of children (2-17 years)",
            "nullable": true,
            "example": "0"
          },
          "Babies": {
            "type": "string",
            "description": "Booked nr of babies (up to 24 months)",
            "nullable": true,
            "example": "1"
          },
          "ArrivalDate": {
            "type": "string",
            "description": "",
            "format": "date",
            "example": "2022-12-01"
          },
          "DepartureDate": {
            "type": "string",
            "description": "",
            "format": "date",
            "example": "2022-12-08"
          },
          "Duration": {
            "type": "number",
            "description": "Duration of stay in days",
            "format": "double",
            "example": 7
          },
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Booking language (documents)",
            "example": "DE"
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": "Currency used for the booking",
            "example": "CHF"
          },
          "PartnerID": {
            "type": "string",
            "description": "Your partner ID",
            "nullable": true,
            "example": "CH123456"
          },
          "PartnerIDExtra": {
            "type": "string",
            "description": "Optional: additional / internal id of the sales partner (alphanumeric, max. 32 characters)",
            "nullable": true,
            "example": "123"
          },
          "PartnerContact": {
            "type": "string",
            "description": "Optional: name / contact info of agent",
            "nullable": true,
            "example": "Susi"
          },
          "IsOption": {
            "type": "boolean",
            "description": "Element must be present. required value: false\r\nTechnically there can be true. This is only allowed if it is agreed with your key account manager.",
            "example": false
          },
          "OptionDate": {
            "type": "string",
            "description": "Date until your option (if allowed by your Interhome Key Account Manager) is valid to",
            "format": "date-time",
            "nullable": true,
            "example": "2021-12-15"
          },
          "OptionDateSpecified": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          },
          "PaymentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentTypeReservationType"
              }
            ],
            "description": "Sets the payment method",
            "nullable": true,
            "example": "CC"
          },
          "PaymentTypeSpecified": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          },
          "PrePaymentUrl": {
            "type": "string",
            "description": "Iframe URL to use to collect prepayment (Only returned if full payment not yet due.  Not returned if payment type = Invoice)",
            "nullable": true,
            "example": "https://payment-test.interhome.com/payform.htm?Reservation=204812345678&Currency=EUR&OrderDesc=204812345678&Method=CC&Language=DE&Source=IRent&Amount=34200"
          },
          "FullPaymentUrl": {
            "type": "string",
            "description": "Iframe URL to use to collect prepayment (Not returned if payment type = Invoice)",
            "nullable": true,
            "example": "https://payment-test.interhome.com/payform.htm?Reservation=204812345678&Currency=EUR&OrderDesc=204812345678&Method=CC&Language=DE&Source=IRent&Amount=171000"
          },
          "Channel": {
            "type": "string",
            "description": "Interhome internal Channel through which the booking was made",
            "nullable": true,
            "example": "WWW"
          },
          "ExternalReference": {
            "type": "string",
            "description": "Optional booking reference of the sales partner",
            "nullable": true,
            "example": "369"
          },
          "Message": {
            "type": "string",
            "description": "Message of the customer to the property owner",
            "nullable": true,
            "example": "guest arrival early"
          },
          "PropertyType": {
            "type": "string",
            "description": "<remark>TODO bin nicht sicher, was der property type hier macht?</remark>",
            "nullable": true
          },
          "PromoCode": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "InsertDate": {
            "type": "string",
            "description": "Date and Time when booking was created resp. inserted in Interhome System",
            "format": "date-time",
            "example": "2021-11-25T10:14:15"
          },
          "UpdateDate": {
            "type": "string",
            "description": "Date and Time when booking was last time updated",
            "format": "date-time",
            "nullable": true,
            "example": "2021-11-27T12:13:15"
          },
          "UpdateDateSpecified": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          },
          "PaymentForms": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationTypePaymentFormItemArray"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationTypePaymentForm": {
        "type": "object",
        "properties": {
          "Mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentTypeType"
              }
            ],
            "description": "Payment method",
            "example": "CC"
          },
          "PrePaymentUrl": {
            "type": "string",
            "description": "Iframe URL to use to collect prepayment (Only returned if full payment not yet due.  Not returned if payment type = Invoice)",
            "nullable": true,
            "example": "https://payment.interhome.com/payform.htm?Reservation=204812345678&Currency=EUR&OrderDesc=204812345678&Method=CC&Language=DE&Source=IRent&Amount=34200"
          },
          "FullPaymentUrl": {
            "type": "string",
            "description": "Iframe URL to use to collect prepayment (Not returned if payment type = Invoice)",
            "nullable": true,
            "example": "https://payment.interhome.com/payform.htm?Reservation=204812345678&Currency=EUR&OrderDesc=204812345678&Method=CC&Language=DE&Source=IRent&Amount=171000"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationTypePaymentFormItemArray": {
        "type": "object",
        "properties": {
          "PaymentForm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationTypePaymentForm"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ReservationsType": {
        "type": "object",
        "properties": {
          "Reservation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationItemType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "RoomType": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoomTypesEnum"
              }
            ],
            "description": "Room type.",
            "example": "entrance_hall"
          },
          "Count": {
            "type": "integer",
            "description": "Number of the specific room.",
            "format": "int32",
            "example": 1
          },
          "Floor": {
            "type": "string",
            "description": "Floor name.",
            "nullable": true,
            "example": "MainFloor"
          }
        },
        "additionalProperties": false,
        "description": "Details of a room."
      },
      "RoomTypesEnum": {
        "enum": [
          "alcove",
          "bay_window",
          "billiard_room",
          "children_room",
          "childrens_room",
          "computer_room",
          "dining_room",
          "double_bedroom",
          "entrance_hall",
          "interconnecting_room",
          "living-dining_room",
          "living_room",
          "living-sleeping_room",
          "lounge",
          "luggage_room",
          "mezzanine",
          "playroom",
          "play_room",
          "rooms",
          "sleeping_alcove",
          "studio",
          "walkthrough_room"
        ],
        "type": "string",
        "description": "<p>Room types</p>\n<p>Members:</p>\n<ul>\n<li><p>alcove</p>\n</li>\n<li><p>bay_window</p>\n</li>\n<li><p>billiard_room</p>\n</li>\n<li><p>children_room</p>\n</li>\n<li><p>childrens_room</p>\n</li>\n<li><p>computer_room</p>\n</li>\n<li><p>dining_room</p>\n</li>\n<li><p>double_bedroom</p>\n</li>\n<li><p>entrance_hall</p>\n</li>\n<li><p>interconnecting_room</p>\n</li>\n<li><p>living-dining_room</p>\n</li>\n<li><p>living_room</p>\n</li>\n<li><p>living-sleeping_room</p>\n</li>\n<li><p>lounge</p>\n</li>\n<li><p>luggage_room</p>\n</li>\n<li><p>mezzanine</p>\n</li>\n<li><p>playroom</p>\n</li>\n<li><p>play_room</p>\n</li>\n<li><p>rooms</p>\n</li>\n<li><p>sleeping_alcove</p>\n</li>\n<li><p>studio</p>\n</li>\n<li><p>walkthrough_room</p>\n</li>\n</ul>\n"
      },
      "RoomsType": {
        "type": "object",
        "properties": {
          "Number": {
            "type": "integer",
            "description": "Number of rooms.",
            "format": "int32",
            "example": 3
          },
          "Room": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of all rooms."
      },
      "SalesOfficeAddressType": {
        "type": "object",
        "properties": {
          "AddressLine1": {
            "type": "string",
            "description": "Additional Info to the name.",
            "nullable": true,
            "example": "HHD AG"
          },
          "AddressLine2": {
            "type": "string",
            "description": "Additional Info.",
            "nullable": true
          },
          "Street": {
            "type": "string",
            "description": "Street and number.",
            "nullable": true,
            "example": "Sägereistrasse 20"
          },
          "Country": {
            "type": "string",
            "description": "Country code.",
            "nullable": true,
            "example": "CH"
          },
          "Zip": {
            "type": "string",
            "description": "Zip code.",
            "nullable": true,
            "example": "8152"
          },
          "Place": {
            "type": "string",
            "description": "Place.",
            "nullable": true,
            "example": "Glattbrugg"
          },
          "State": {
            "type": "string",
            "description": "State (if any).",
            "nullable": true
          },
          "PhoneNumber": {
            "type": "string",
            "description": "Phone number.",
            "nullable": true,
            "example": "+41 43 810 91 91"
          },
          "FaxNumber": {
            "type": "string",
            "description": "Fax number.",
            "nullable": true,
            "example": "+41 43 810 91 90"
          },
          "EmailAddress": {
            "type": "string",
            "description": "Email Address.",
            "nullable": true,
            "example": "info.ch@interhome.group"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SalesOfficesRs": {
        "type": "object",
        "properties": {
          "SalesOffice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesOfficesRsSalesOffice"
            },
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "SalesOfficesRs"
        }
      },
      "SalesOfficesRsSalesOffice": {
        "type": "object",
        "properties": {
          "SalesOfficeCode": {
            "type": "string",
            "description": "Interhome Group sales office code.",
            "nullable": true,
            "example": "2020"
          },
          "Name": {
            "type": "string",
            "description": "Name of the sales office.",
            "nullable": true,
            "example": "Interhome Group"
          },
          "Address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SalesOfficeAddressType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "TermsUrl": {
            "type": "string",
            "description": "Terms for this sales office.",
            "format": "uri",
            "nullable": true,
            "example": "https://www.interhome.ch/media/original/1020935-ger-CH/AGB_2020_DE.pdf"
          },
          "Bank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BankType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Payment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SalesOfficesRsSalesOfficePayment"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Currencies": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrenciesItemArray"
              }
            ],
            "description": "Currency of the sales office.",
            "nullable": true
          },
          "Languages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesItemArray"
              }
            ],
            "description": "Offical language of the sales office.",
            "nullable": true
          },
          "CancelConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancelConditionType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SalesOfficesRsSalesOfficePayment": {
        "type": "object",
        "properties": {
          "PaymentForms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentFormType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SearchPropertiesEnum": {
        "enum": [
          "aircondition",
          "apartment",
          "balcony_or_terrace",
          "bathrooms",
          "bbq",
          "bedrooms",
          "biking_plains",
          "boat",
          "casa",
          "center",
          "chalet",
          "cheapcheap",
          "citytrips",
          "code",
          "cots",
          "crosscountry_skiing",
          "detached",
          "discount-20",
          "dishwasher",
          "early_booker",
          "familyfriendly",
          "farmhouse",
          "fireplace",
          "fishing",
          "fishing_certified",
          "garage",
          "garage_or_single_garage",
          "golf",
          "hiking",
          "holiday_resort",
          "house",
          "lake",
          "last_minute",
          "mountainbiking",
          "parking",
          "pax",
          "pets",
          "pool",
          "pool_children",
          "pool_indoor",
          "pool_private",
          "residence",
          "riding",
          "sailing",
          "sauna",
          "sea",
          "sea_or_lake_view",
          "selection",
          "single_garage",
          "ski",
          "skiarea",
          "special_offer",
          "stars",
          "surfing",
          "swiss_peak",
          "tennis",
          "tv",
          "utoring",
          "villa",
          "washingmachine",
          "wellness",
          "wheelchair",
          "hottub",
          "wlan"
        ],
        "type": "string",
        "description": "<p>Supported search properties</p>\n<p>Members:</p>\n<ul>\n<li><p>aircondition</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>apartment</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>balcony_or_terrace</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>bathrooms</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>bbq</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>bedrooms</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>biking_plains</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>boat</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>casa</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>center</p>\n<p>Distance to center</p>\n<p>Remarks</p>\n<p>Value type: Numeric</p>\n</li>\n<li><p>chalet</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>cheapcheap</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>citytrips</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>code</p>\n<p>Search for specific accommodations.</p>\n<p>Remarks</p>\n<p>Value type: string</p>\n</li>\n<li><p>cots</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>crosscountry_skiing</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>detached</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>discount-20</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>dishwasher</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>early_booker</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>familyfriendly</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>farmhouse</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>fireplace</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>fishing</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>fishing_certified</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>garage</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>garage_or_single_garage</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>golf</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>hiking</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>holiday_resort</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>house</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>lake</p>\n<p>Distance to lake</p>\n<p>Remarks</p>\n<p>Value type: Numeric</p>\n</li>\n<li><p>last_minute</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>mountainbiking</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>parking</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>pax</p>\n<p>Remarks</p>\n<p>Value type: Numeric</p>\n</li>\n<li><p>pets</p>\n<p>Remarks</p>\n<p>Value type: Numeric</p>\n</li>\n<li><p>pool</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>pool_children</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>pool_indoor</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>pool_private</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>residence</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>riding</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>sailing</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>sauna</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>sea</p>\n<p>Distance to sea</p>\n<p>Remarks</p>\n<p>Value type: Numeric</p>\n</li>\n<li><p>sea_or_lake_view</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>selection</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>single_garage</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>ski</p>\n<p>Distance to ski area</p>\n<p>Remarks</p>\n<p>Value type: Numeric</p>\n</li>\n<li><p>skiarea</p>\n<p>Distance to ski area</p>\n<p>Remarks</p>\n<p>Value type: Numeric</p>\n</li>\n<li><p>special_offer</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>stars</p>\n<p>Remarks</p>\n<p>Value type: Numeric</p>\n</li>\n<li><p>surfing</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>swiss_peak</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>tennis</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>tv</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>utoring</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>villa</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>washingmachine</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>wellness</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>wheelchair</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>hottub</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n<li><p>wlan</p>\n<p>Remarks</p>\n<p>Value type: Boolean</p>\n</li>\n</ul>\n"
      },
      "SearchRqType": {
        "type": "object",
        "properties": {
          "Page": {
            "type": "integer",
            "description": "Page to set up on result.",
            "format": "int32",
            "example": 1
          },
          "PageSize": {
            "type": "integer",
            "description": "Size of result page (displays 20 accommodations per page, for up to 100 pages).",
            "format": "int32",
            "default": 10,
            "example": 20
          },
          "OrderDirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchRqTypeOrderDirectionEnum"
              }
            ],
            "description": "Sets the oder direction. \"ascending\" or \"descending\".",
            "default": "ascending",
            "example": "ascending"
          },
          "OrderBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderByEnum"
              }
            ],
            "description": "Sets the sort oder. Sorting\r\n- interhome = default sorting,\r\n- lastbookday = sort by number of bookings,\r\n- age = sort by age of contract,\r\n- averagerating = sort by customer rating,\r\n- price = sort by price,\r\n- pax = number of persons,",
            "nullable": true,
            "example": "interhome"
          },
          "Currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": "Currency of the prices.",
            "example": "CHF"
          },
          "SalesOffice": {
            "type": "string",
            "description": "SalesOffice used for the partner.",
            "nullable": true,
            "example": "2020"
          },
          "QuickSearch": {
            "type": "string",
            "description": "QuickSearch field for a destination.",
            "nullable": true,
            "example": "Zermatt"
          },
          "CountryCode": {
            "type": "string",
            "description": "Country code (as in CH for Switzerland).",
            "nullable": true,
            "example": "CH"
          },
          "RegionCode": {
            "type": "string",
            "description": "Region code (as in 10 for Wallis).",
            "nullable": true,
            "example": "10"
          },
          "PlaceCode": {
            "type": "string",
            "description": "Place code (as in 3920 for Zermatt).",
            "nullable": true,
            "example": "3920"
          },
          "CheckIn": {
            "type": "string",
            "description": "Desired check-in date",
            "format": "date",
            "nullable": true,
            "example": "2021-10-15"
          },
          "Duration": {
            "type": "integer",
            "description": "Duration of stay (note: to receive all properties, please use 7 as default).",
            "format": "int32",
            "nullable": true,
            "example": 7
          },
          "Properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PropertyTypeItemArray"
              }
            ],
            "description": "Contains an array of properties.",
            "nullable": true
          },
          "IncludeOnRequest": {
            "type": "boolean",
            "description": "??? not commented",
            "nullable": true
          },
          "RadiusSearchOff": {
            "type": "boolean",
            "description": "When searching for places / place codes, the radius search is enabled by default and properties in the vicinity may be included in the search result.\r\nWhen this parameter is set to true, the radius search is disabled (off) and only properties with the exact place code (or child place codes) are returned.",
            "nullable": true,
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "SearchRq"
        }
      },
      "SearchRqTypeOrderDirectionEnum": {
        "enum": [
          "ascending",
          "descending"
        ],
        "type": "string",
        "description": "<p>Members:</p>\n<ul>\n<li><p>ascending</p>\n</li>\n<li><p>descending</p>\n</li>\n</ul>\n"
      },
      "SearchRs": {
        "type": "object",
        "properties": {
          "AccommodationItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccomSearchItemType"
            },
            "description": "",
            "nullable": true
          },
          "CheckIn": {
            "type": "string",
            "description": "",
            "format": "date",
            "nullable": true,
            "example": "2021-05-04"
          },
          "Count": {
            "type": "integer",
            "description": "Number of Objects found with the selected parameters.",
            "format": "int32",
            "example": 3468
          },
          "Duration": {
            "type": "integer",
            "description": "Selected duration.",
            "format": "int32",
            "example": 7
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "SearchRs"
        }
      },
      "ServiceInputType": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Interhome Group internal Service Code.",
            "nullable": true,
            "example": "BUGY"
          },
          "SubCode": {
            "type": "string",
            "description": "Interhome Group internal Sub Service Code.",
            "nullable": true,
            "example": ""
          },
          "Text": {
            "type": "string",
            "description": "Service Text.",
            "nullable": true,
            "example": ""
          },
          "Total": {
            "type": "string",
            "description": "Number of Services.",
            "nullable": true,
            "example": "1"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ServiceInputTypeItemArray": {
        "type": "object",
        "properties": {
          "Service": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceInputType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ServiceType": {
        "type": "object",
        "properties": {
          "ServiceType": {
            "type": "string",
            "description": "Type of Service.",
            "nullable": true,
            "example": "ExtracostOnPlace"
          },
          "Amount": {
            "type": "number",
            "description": "Price of the service.",
            "format": "double",
            "example": 10.15
          },
          "Code": {
            "type": "string",
            "description": "Internal service code.",
            "nullable": true,
            "example": "FC"
          },
          "Count": {
            "type": "integer",
            "description": "Amount of allotments.\r\nEg: XBED, count 2 - could be chosen 2 times. \r\nEg: TW, count 0 - no allotments available. If towels are chosen as a service, the service amount will be calculated for the number of pax chosen.",
            "format": "int32",
            "example": 0
          },
          "Currency": {
            "type": "string",
            "description": "Currency (see CurrencyEnum)",
            "nullable": true,
            "example": "EUR"
          },
          "Description": {
            "type": "string",
            "description": "Description of the Service.",
            "nullable": true,
            "example": "Final cleaning"
          },
          "PaymentInfo": {
            "type": "string",
            "description": "Information about payment.",
            "nullable": true,
            "example": "Payable in resort per person"
          },
          "PriceRule": {
            "type": "string",
            "description": "Internal price rule code (corresponds to payment Info, see PriceRulesEnum).",
            "nullable": true,
            "example": "P1"
          },
          "Text": {
            "type": "string",
            "description": "If more info available about the service.\r\nCan also be empty.",
            "nullable": true,
            "example": ""
          },
          "ValidFrom": {
            "type": "string",
            "description": "",
            "format": "date",
            "example": "2022-06-15"
          },
          "ValidTo": {
            "type": "string",
            "description": "",
            "format": "date",
            "example": "2023-06-15"
          },
          "IsDefault": {
            "type": "boolean",
            "description": "True if service is selected by default.",
            "example": true
          },
          "IsIncluded": {
            "type": "boolean",
            "description": "True if service is included in the price.",
            "example": true
          },
          "IsInsurance": {
            "type": "boolean",
            "description": "True if service is insurance.",
            "example": true
          },
          "IsMandatory": {
            "type": "boolean",
            "description": "For optional services paid on-site:\r\nThis should be presented to the guest.\r\nIt will be shown on the invoice.",
            "example": true
          },
          "IsOnRequest": {
            "type": "boolean",
            "description": "True if service is optional on request.",
            "example": true
          },
          "IsCalculated": {
            "type": "boolean",
            "description": "True if service cost is calculated in the final price.",
            "example": true
          },
          "Type": {
            "type": "string",
            "description": "Internal type code (corresponds with service Type, see ServiceTypeEnum).",
            "nullable": true,
            "example": "N1"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ServiceTypeEnum": {
        "enum": [
          "N1",
          "N2",
          "N4",
          "Y1",
          "Y2",
          "Y4",
          "Y5",
          "Y6",
          "XX"
        ],
        "type": "string",
        "description": "<p>2.4.2 SERVICES</p>\n<p>Members:</p>\n<ul>\n<li><p>N1</p>\n<p>Bookable service on invoice</p>\n<p>Remarks</p>\n<p>Optional service which can be added to the reservation (booked) and will appear in a separate line item on the\ncustomer invoice (e.g., Extra Insurances).</p>\n</li>\n<li><p>N2</p>\n<p>Bookable service - no cost</p>\n<p>Remarks</p>\n<p>Included in the price. Can be booked without any additional fee and it will appear on the invoice (e.g., COT: cot).\nN4 Bookable OnPlace Optional service, payable OnPlace. Optional service which can be added to the reservation\n(booked), but will not appear in a separate line item on the invoice. The amount has to be paid on the spot directly\nto the keyholder (example.g.,: XBED: extrabed).</p>\n</li>\n<li><p>N4</p>\n<p>Bookable service - On place</p>\n<p>Remarks</p>\n<p>Optional service, payable OnPlace.\nOptional service which can be added to the reservation (booked), but will not appear in a separate line item on the\ninvoice. The amount has to be paid on the spot directly to the keyholder (example.g.,: XBED: extrabed).</p>\n</li>\n<li><p>Y1</p>\n<p>Costs on invoice</p>\n<p>Remarks</p>\n<p>Mandatory fee which is added to the invoice (e.g., BG: booking fee).</p>\n</li>\n<li><p>Y2</p>\n<p>In price included</p>\n<p>Remarks</p>\n<p>Services that are included in the total amount without any extra cost for the customer (e.g., EG: energy cost).</p>\n</li>\n<li><p>Y4</p>\n<p>Extra cost on place</p>\n<p>Remarks</p>\n<p>Mandatory fee which has to be paid on the spot (e.g., local tax). Y5 OptionalInResort Optional in resort: optional\nservice, which must be added to the invoice but has to be paid on the spot (e.g., bed linen).</p>\n</li>\n<li><p>Y5</p>\n<p>Optional in Resort</p>\n<p>Remarks</p>\n<p>Optional in resort:\nOptional service, which must be added to the invoice but has to be paid on the spot (e.g., bed linen).</p>\n</li>\n<li><p>Y6</p>\n<p>Own arrangement</p>\n<p>Remarks</p>\n<p>A service which is NOT provided by HHD and must be organized or brought by the client (e.g., final cleaning in some\ndestinations).</p>\n</li>\n<li><p>XX</p>\n<p>Not applicable</p>\n<p>Remarks</p>\n<p>Used when no service type is necessary</p>\n</li>\n</ul>\n"
      },
      "SpecialOfferDefinitionType": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Interhome Group special offer code.",
            "nullable": true,
            "example": "LM/00000002"
          },
          "Name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecialOfferDefinitionTypeName"
            },
            "description": "Name that appears to the code.",
            "nullable": true
          },
          "MinStay": {
            "type": "integer",
            "description": "Minimum stay the special offer is requiring.",
            "format": "int32",
            "nullable": true,
            "example": 2
          },
          "MaxStay": {
            "type": "integer",
            "description": "Max. stay in order special offer applies.",
            "format": "int32",
            "nullable": true,
            "example": 10
          },
          "LateBooking": {
            "type": "integer",
            "description": "Xy days before arrival the special offer is available.",
            "format": "int32",
            "nullable": true,
            "example": 10
          },
          "EarlyBooking": {
            "type": "integer",
            "description": "Xy days before arrival the special offer is available.",
            "format": "int32",
            "nullable": true,
            "example": 280
          },
          "Text": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecialOfferDefinitionTypeText"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SpecialOfferDefinitionTypeName": {
        "type": "object",
        "properties": {
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "Language of the code description",
            "xml": {
              "attribute": true
            },
            "example": "en"
          },
          "content": {
            "type": "string",
            "description": "Some text",
            "nullable": true,
            "example": "Discount"
          }
        },
        "additionalProperties": false,
        "description": "Name that appears to the code"
      },
      "SpecialOfferDefinitionTypeText": {
        "type": "object",
        "properties": {
          "Language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguagesEnum"
              }
            ],
            "description": "",
            "xml": {
              "attribute": true
            }
          },
          "Value": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SpecialOfferDefinitionsRs": {
        "type": "object",
        "properties": {
          "SpecialOfferDefinition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecialOfferDefinitionType"
            },
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "SpecialOfferDefinitionsRs"
        }
      },
      "ThemeEnum": {
        "enum": [
          "cheepcheep",
          "citytrips",
          "countryside",
          "family",
          "lakeside_town",
          "mountains_lakes",
          "nightlife",
          "selection",
          "ski-winter",
          "somewhere_quiet",
          "special_property",
          "sun-beach",
          "casa",
          "workation"
        ],
        "type": "string",
        "description": "<p>Special themes</p>\n<p>Members:</p>\n<ul>\n<li><p>cheepcheep</p>\n<p>Interhome Group budget catalog</p>\n</li>\n<li><p>citytrips</p>\n<p>Located in / near a city. Suitable for short trips</p>\n</li>\n<li><p>countryside</p>\n</li>\n<li><p>family</p>\n<p>Family friendly accommodation / resort farmhouse</p>\n</li>\n<li><p>lakeside_town</p>\n</li>\n<li><p>mountains_lakes</p>\n</li>\n<li><p>nightlife</p>\n</li>\n<li><p>selection</p>\n<p>Interhome Group &quot;selection&quot; catalogue</p>\n</li>\n<li><p>ski-winter</p>\n<p>Suitable for winter / skiing holidays</p>\n</li>\n<li><p>somewhere_quiet</p>\n<p>In a quiet location</p>\n</li>\n<li><p>special_property</p>\n<p>Outstanding accommodation with a special flair</p>\n</li>\n<li><p>sun-beach</p>\n<p>Suitable for beach holidays</p>\n</li>\n<li><p>casa</p>\n<p>Special CASA properties with higher standards</p>\n</li>\n<li><p>workation</p>\n<p>Qualified for a combination of work and holidays</p>\n</li>\n</ul>\n"
      },
      "ThemeTypeItemArray": {
        "type": "object",
        "properties": {
          "Theme": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "See thematic classification of the accommodation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "See thematic classification of the accommodation."
      },
      "TitleWithTextTypeTitleWithTexts": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string",
            "description": "",
            "nullable": true,
            "xml": {
              "attribute": true
            }
          },
          "Text": {
            "type": "string",
            "description": "",
            "nullable": true,
            "xml": {
              "attribute": true
            }
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "TitleWithTextTypeTitleWithTextsItemsArray": {
        "type": "object",
        "properties": {
          "TitleWithTexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TitleWithTextTypeTitleWithTexts"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ToiletsType": {
        "type": "object",
        "properties": {
          "Number": {
            "type": "integer",
            "description": "Number of toilets.",
            "format": "int32",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "Number of ."
      },
      "TravelDestinationsRs": {
        "type": "object",
        "properties": {
          "Countries": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TravelDestinationsRsCountries"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "TravelDestinationsRs"
        }
      },
      "TravelDestinationsRsCountries": {
        "type": "object",
        "properties": {
          "Country": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "TravelOverview": {
        "type": "object",
        "properties": {
          "InvoiceNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TravelOverviewInvoiceNumber"
              }
            ],
            "description": "",
            "nullable": true
          },
          "BookingLanguage": {
            "type": "string",
            "description": "Voucher language correspond to booking language.",
            "nullable": true,
            "example": "EN"
          },
          "Travelers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TravelerTravelerItemArray"
            },
            "description": "",
            "nullable": true
          },
          "CreateDocument": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TravelOverviewCreateDocument"
              }
            ],
            "description": "Date when the information of the voucher has been created.",
            "nullable": true
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressTypeAddressItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Retailer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressTypeAddressItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "ReservationInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationInformation"
              }
            ],
            "description": "",
            "nullable": true
          },
          "IsRefusedPaxsplitt": {
            "type": "boolean",
            "description": "If this value is true, please note that there are restrictions in regards to the bedrooms, units, floors or annex to use when not booking with the max number of Pax.",
            "example": false
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "TravelOverviewCreateDocument": {
        "type": "object",
        "properties": {
          "Date": {
            "type": "string",
            "description": "",
            "format": "date",
            "xml": {
              "attribute": true
            },
            "example": "2020-11-12"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "TravelOverviewInvoiceNumber": {
        "type": "object",
        "properties": {
          "Reservationnumber": {
            "type": "string",
            "description": "Interhome Reservation number.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "202016123456"
          },
          "InvoiceCounter": {
            "type": "string",
            "description": "Informational only.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "003"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "TravelerTraveler": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string",
            "description": "Possible values\r\n- 0001 = Mr\r\n- 0002 = Ms\r\n- 0003 = Mr & Ms\r\n- 0004 = company\r\n- 0005 = undefined",
            "nullable": true,
            "example": "0001"
          },
          "Firstname": {
            "type": "string",
            "description": "Firstname.",
            "nullable": true,
            "example": "John"
          },
          "Surname": {
            "type": "string",
            "description": "Last name.",
            "nullable": true,
            "example": "Doe"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "TravelerTravelerItemArray": {
        "type": "object",
        "properties": {
          "Traveler": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TravelerTraveler"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "TripsRs": {
        "type": "object",
        "properties": {
          "Trips": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TripsType"
              }
            ],
            "description": "",
            "nullable": true
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "TripsRs"
        }
      },
      "TripsType": {
        "type": "object",
        "properties": {
          "Trip": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TripsTypeTrip"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "TripsTypeTrip": {
        "type": "object",
        "properties": {
          "CheckIn": {
            "type": "string",
            "description": "Next possible check-in date for the requested accommodation.",
            "format": "date-time",
            "example": "2021-05-14"
          },
          "Duration": {
            "type": "integer",
            "description": "Possible duration for the check-in date.",
            "format": "int32",
            "example": 7
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "VacancyChangeEnum": {
        "enum": [
          "X",
          "C",
          "O",
          "I"
        ],
        "type": "string",
        "description": "<p>Indicates if the key can be handed over on that day.</p>\n<p>Members:</p>\n<ul>\n<li><p>X</p>\n<p>no action possible</p>\n</li>\n<li><p>C</p>\n<p>check-in and check-out possible</p>\n</li>\n<li><p>O</p>\n<p>check-out only</p>\n</li>\n<li><p>I</p>\n<p>check-in only</p>\n</li>\n</ul>\n"
      },
      "VacancyDayType": {
        "type": "object",
        "properties": {
          "Date": {
            "type": "string",
            "description": "",
            "format": "date",
            "example": "2022-12-01"
          },
          "State": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VacancyStateEnum"
              }
            ],
            "description": "Availability Status of the chosen Object during the requested date.",
            "example": "Y"
          },
          "Change": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VacancyChangeEnum"
              }
            ],
            "description": "Indicates if the key can be handed over on that day.",
            "example": "C"
          },
          "MinimumStay": {
            "type": "integer",
            "description": "Minimum stay (in nights) for the chosen check-in date.\r\nValues usually range from 1-14, rarely > 28 (nights).",
            "format": "int32",
            "example": 3
          },
          "Allotment": {
            "type": "integer",
            "description": "How many units of this type are available/bookable.",
            "format": "int32",
            "example": 10
          },
          "MaximumStay": {
            "type": "integer",
            "description": "Maximum stay (in nights) for the chosen check-in date.",
            "format": "int32",
            "example": 0
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "VacancyRs": {
        "type": "object",
        "properties": {
          "Calendar": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VacancyRsCalendar"
            },
            "description": "",
            "nullable": true
          },
          "RangeFromDate": {
            "type": "string",
            "description": "first day in the vacancy string",
            "format": "date",
            "example": "2021-05-02"
          },
          "RangeToDate": {
            "type": "string",
            "description": "last day in the vacancy string",
            "format": "date",
            "example": "2022-02-04"
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "VacancyRs"
        }
      },
      "VacancyRsCalendar": {
        "type": "object",
        "properties": {
          "Day": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VacancyDayType"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "VacancyStateEnum": {
        "enum": [
          "Y",
          "N",
          "Q"
        ],
        "type": "string",
        "description": "<p>Vacancy state</p>\n<p>Members:</p>\n<ul>\n<li><p>Y</p>\n<p>available</p>\n</li>\n<li><p>N</p>\n<p>occupied</p>\n</li>\n<li><p>Q</p>\n<p>on request</p>\n</li>\n</ul>\n"
      },
      "VacancyStringRs": {
        "type": "object",
        "properties": {
          "Allotment": {
            "type": "string",
            "description": "How many units of this type are available/bookable.",
            "nullable": true,
            "example": "0011001"
          },
          "Change": {
            "type": "string",
            "description": "Indicates if the keys can be handed over on that day.\r\nX - no action possible\r\nC - check-in and check-out possible\r\nO - check-out only\r\nI - check-in only",
            "nullable": true,
            "example": "XXCCXXC"
          },
          "MinimumStay": {
            "type": "string",
            "description": "The minimum stay is represented by a character of the alphabet (A-Z) as follows:\r\nA = Min. stay 1\r\nB = Min. stay 2\r\nC = Min. stay 3\r\n...",
            "nullable": true,
            "example": "CCGGGCC"
          },
          "MaximumStay": {
            "type": "string",
            "description": "The maximum stay is represented follows:\r\n1 = Min. stay 1\r\n2 = Min. stay 2\r\n...\r\n9 = Min. stay 9\r\nA = Min. stay 10\r\nB = Min. stay 11\r\n...\r\nUsually stays can be up to 28 days (\"S\")",
            "nullable": true,
            "example": "777SSSS"
          },
          "RangeFromDate": {
            "type": "string",
            "description": "first day in the vacancy string",
            "format": "date",
            "example": "2017-02-17"
          },
          "RangeToDate": {
            "type": "string",
            "description": "last day in the vacancy string",
            "format": "date",
            "example": "2017-02-24"
          },
          "State": {
            "type": "string",
            "description": "Y = available\r\nN = occupied\r\nQ = on request",
            "nullable": true,
            "example": "NNYYNNY"
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ],
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "xml": {
          "name": "VacancyStringRs"
        }
      },
      "VoucherDetailType": {
        "type": "object",
        "properties": {
          "TravelOverview": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TravelOverview"
              }
            ],
            "description": "",
            "nullable": true
          },
          "KeyCollection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeyCollection"
              }
            ],
            "description": "",
            "nullable": true
          },
          "YourHolidayHome": {
            "allOf": [
              {
                "$ref": "#/components/schemas/YourHolidayHome"
              }
            ],
            "description": "",
            "nullable": true
          },
          "CostAndServices": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CostAndServices"
              }
            ],
            "description": "",
            "nullable": true
          },
          "ImportantInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImportantInfo"
              }
            ],
            "description": "",
            "nullable": true
          },
          "AlertTexts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Alert"
              }
            ],
            "description": "",
            "nullable": true
          },
          "CustomerRequests": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            ],
            "description": "",
            "nullable": true
          },
          "IndividualTexts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IndividualTexts"
              }
            ],
            "description": "",
            "nullable": true
          },
          "PreCheckInLink": {
            "type": "string",
            "description": "In order to ensure a smooth and fast process during the journey, it is important that the customer completes the pre-check-in beforehand, otherwise there may be waiting times.",
            "nullable": true,
            "example": "https://www.interhome.ch/EN/prearrival/?token=7AZ6tyz"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "YourHolidayHome": {
        "type": "object",
        "properties": {
          "Contacts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactTypeContactItemArray"
              }
            ],
            "description": "",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "Accommodation Nr of booked  holiday home.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "CH3920.45.1"
          },
          "OldNref": {
            "type": "string",
            "description": "Old Interchalet ref or external ref.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "VEE300"
          },
          "ExternalReferenzNumber": {
            "type": "string",
            "description": "",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": ""
          },
          "ObjectName": {
            "type": "string",
            "description": "Accommodation name.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Imperial"
          },
          "UrlToShop": {
            "type": "string",
            "description": "URL of the accommodation.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "www.interhome.ch/CH3920.45.1"
          },
          "Name": {
            "type": "string",
            "description": "",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": ""
          },
          "AddressLine1": {
            "type": "string",
            "description": "Addition to address.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Imperial"
          },
          "AddressLine2": {
            "type": "string",
            "description": "Addition to address.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": ""
          },
          "Street": {
            "type": "string",
            "description": "Streetname and number.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Objektstrasse  22"
          },
          "Country": {
            "type": "string",
            "description": "Country code.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "CH"
          },
          "Zip": {
            "type": "string",
            "description": "ZIP.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "3920"
          },
          "Place": {
            "type": "string",
            "description": "Place.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "Zermatt"
          },
          "Longitude": {
            "type": "number",
            "description": "Longitude.",
            "format": "double",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": 7.6548233
          },
          "Latitude": {
            "type": "number",
            "description": "Latitude.",
            "format": "double",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": 46.059433
          },
          "Longitude_GMS": {
            "type": "string",
            "nullable": true,
            "xml": {
              "attribute": true
            }
          },
          "Latitude_GMS": {
            "type": "string",
            "nullable": true,
            "xml": {
              "attribute": true
            }
          },
          "ApartNo": {
            "type": "string",
            "description": "Apart Number if any.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": ""
          },
          "Brand": {
            "type": "string",
            "description": "Interhome Group Brand.",
            "nullable": true,
            "xml": {
              "attribute": true
            },
            "example": "I"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "zititle_medi": {
        "enum": [
          "Mr",
          "Ms",
          "MrMs",
          "Company"
        ],
        "type": "string",
        "description": "<p>Members:</p>\n<ul>\n<li><p>Mr</p>\n</li>\n<li><p>Ms</p>\n</li>\n<li><p>MrMs</p>\n<p>Mr &amp; Ms</p>\n</li>\n<li><p>Company</p>\n</li>\n</ul>\n"
      }
    },
    "securitySchemes": {
      "PartnerId": {
        "type": "apiKey",
        "description": "Api key needed to access the API. PartnerId: *Your_PartnerId*.",
        "name": "PartnerId",
        "in": "header"
      },
      "Token": {
        "type": "apiKey",
        "description": "Api key needed to access the API. Token: *Your_Token*.",
        "name": "Token",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "PartnerId": [ ],
      "Token": [ ]
    }
  ]
}